{
    "swagger": "2.0",
    "basePath": "",
    "info": {
        "title": "LPWAN App Server REST API",
        "version": "1.0.0",
        "description": "\nFor more information about the usage of the LPWAN App Server (REST) API, see\n[https://docs.loraserver.io/lora-app-server/api/](https://docs.loraserver.io/lora-app-server/api/).\n"
    },
    "schemes": null,
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/applications": {
            "get": {
                "operationId": "List",
                "parameters": [
                    {
                        "description": "Max number of applications to return in the result-test.",
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Offset in the result-set (for pagination).",
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "ID of the organization to filter on.",
                        "format": "int64",
                        "in": "query",
                        "name": "organizationID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Search on name (optional).",
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListApplicationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List lists the available applications.",
                "tags": [
                    "ApplicationService"
                ]
            },
            "post": {
                "operationId": "Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateApplicationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiCreateApplicationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Create creates the given application.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/applications/{application.id}": {
            "put": {
                "operationId": "Update",
                "parameters": [
                    {
                        "description": "Application ID.\nThis will be automatically assigned on create.",
                        "format": "int64",
                        "in": "path",
                        "name": "application.id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateApplicationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Update updates the given application.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/applications/{applicationID}/integrations": {
            "get": {
                "operationId": "ListIntegrations",
                "parameters": [
                    {
                        "description": "The id of the application.",
                        "format": "int64",
                        "in": "path",
                        "name": "applicationID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListIntegrationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "ListIntegrations lists all configured integrations.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/applications/{applicationID}/integrations/http": {
            "delete": {
                "operationId": "DeleteHTTPIntegration",
                "parameters": [
                    {
                        "description": "The id of the application.",
                        "format": "int64",
                        "in": "path",
                        "name": "applicationID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "DeleteIntegration deletes the HTTP application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            },
            "get": {
                "operationId": "GetHTTPIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "applicationID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetHTTPIntegrationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "GetHTTPIntegration returns the HTTP application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/applications/{applicationID}/integrations/influxdb": {
            "delete": {
                "operationId": "DeleteInfluxDBIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "applicationID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "DeleteInfluxDBIntegration deletes the InfluxDB application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            },
            "get": {
                "operationId": "GetInfluxDBIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "applicationID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetInfluxDBIntegrationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "GetInfluxDBIntegration returns the InfluxDB application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/applications/{applicationID}/integrations/loracloud": {
            "delete": {
                "operationId": "DeleteLoRaCloudIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "applicationID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "DeleteLoRaCloudIntegration deletes the LoRaCloud application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            },
            "get": {
                "operationId": "GetLoRaCloudIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "applicationID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetLoRaCloudIntegrationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "GetLoRaCloudIntegration returns the LoRaCloud application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/applications/{applicationID}/integrations/mydevices": {
            "delete": {
                "operationId": "DeleteMyDevicesIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "applicationID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "DeleteMyDevicesIntegration deletes the MyDevices application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            },
            "get": {
                "operationId": "GetMyDevicesIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "applicationID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetMyDevicesIntegrationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "GetMyDevicesIntegration returns the MyDevices application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/applications/{applicationID}/integrations/thingsboard": {
            "delete": {
                "operationId": "DeleteThingsBoardIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "applicationID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "DeleteThingsBoardIntegration deletes the ThingsBoard application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            },
            "get": {
                "operationId": "GetThingsBoardIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "applicationID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetThingsBoardIntegrationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "GetThingsBoardIntegration returns the ThingsBoard application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/applications/{id}": {
            "delete": {
                "operationId": "Delete",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Delete deletes the given application.",
                "tags": [
                    "ApplicationService"
                ]
            },
            "get": {
                "operationId": "Get",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetApplicationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get returns the requested application.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/applications/{integration.applicationID}/integrations/http": {
            "post": {
                "operationId": "CreateHTTPIntegration",
                "parameters": [
                    {
                        "description": "The id of the application.",
                        "format": "int64",
                        "in": "path",
                        "name": "integration.applicationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateHTTPIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "CreateHTTPIntegration creates a HTTP application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            },
            "put": {
                "operationId": "UpdateHTTPIntegration",
                "parameters": [
                    {
                        "description": "The id of the application.",
                        "format": "int64",
                        "in": "path",
                        "name": "integration.applicationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateHTTPIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "UpdateHTTPIntegration updates the HTTP application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/applications/{integration.applicationID}/integrations/influxdb": {
            "post": {
                "operationId": "CreateInfluxDBIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "integration.applicationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateInfluxDBIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "CreateInfluxDBIntegration create an InfluxDB application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            },
            "put": {
                "operationId": "UpdateInfluxDBIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "integration.applicationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateInfluxDBIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "UpdateInfluxDBIntegration updates the InfluxDB application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/applications/{integration.applicationID}/integrations/loracloud": {
            "post": {
                "operationId": "CreateLoRaCloudIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "integration.applicationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateLoRaCloudIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "CreateLoRaCloudIntegration creates A LoRaCloud application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            },
            "put": {
                "operationId": "UpdateLoRaCloudIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "integration.applicationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateLoRaCloudIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "UpdateLoRaCloudIntegration updates the LoRaCloud application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/applications/{integration.applicationID}/integrations/mydevices": {
            "post": {
                "operationId": "CreateMyDevicesIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "integration.applicationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateMyDevicesIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "CreateMyDevicesIntegration creates a MyDevices application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            },
            "put": {
                "operationId": "UpdateMyDevicesIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "integration.applicationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateMyDevicesIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "UpdateMyDevicesIntegration updates the MyDevices application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/applications/{integration.applicationID}/integrations/thingsboard": {
            "post": {
                "operationId": "CreateThingsBoardIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "integration.applicationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateThingsBoardIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "CreateThingsBoardIntegration creates a ThingsBoard application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            },
            "put": {
                "operationId": "UpdateThingsBoardIntegration",
                "parameters": [
                    {
                        "description": "Application ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "integration.applicationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateThingsBoardIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "UpdateThingsBoardIntegration updates the ThingsBoard application-integration.",
                "tags": [
                    "ApplicationService"
                ]
            }
        },
        "/api/btc-mining/list-locks": {
            "get": {
                "operationId": "BTCListLocks",
                "parameters": [
                    {
                        "description": "org for which the locks must be returned.",
                        "format": "int64",
                        "in": "query",
                        "name": "orgId",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiBTCListLocksResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List the locks that are still open",
                "tags": [
                    "BTCMining"
                ]
            }
        },
        "/api/btc-mining/lock": {
            "post": {
                "operationId": "BTCAddLocks",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiBTCAddLocksRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiBTCAddLocksResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Create locks for current or upcoming mining session",
                "tags": [
                    "BTCMining"
                ]
            }
        },
        "/api/btc-mining/session": {
            "get": {
                "operationId": "BTCMiningSession",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiBTCMiningSessionResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Request information about the current or upcoming mining session",
                "tags": [
                    "BTCMining"
                ]
            }
        },
        "/api/confirm-external-email": {
            "post": {
                "operationId": "ConfirmBindingEmail",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiConfirmBindingEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiConfirmBindingEmailResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "ConfirmBindingEmail checks given token and bind",
                "tags": [
                    "ExternalUserService"
                ]
            }
        },
        "/api/device-profiles": {
            "get": {
                "operationId": "List",
                "parameters": [
                    {
                        "description": "Max number of items to return.",
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Offset in the result-set (for pagination).",
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Organization id to filter on.",
                        "format": "int64",
                        "in": "query",
                        "name": "organizationID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Application id to filter on.",
                        "format": "int64",
                        "in": "query",
                        "name": "applicationID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListDeviceProfileResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List lists the available device-profiles.",
                "tags": [
                    "DeviceProfileService"
                ]
            },
            "post": {
                "operationId": "Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateDeviceProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiCreateDeviceProfileResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Create creates the given device-profile.",
                "tags": [
                    "DeviceProfileService"
                ]
            }
        },
        "/api/device-profiles/{deviceProfile.id}": {
            "put": {
                "operationId": "Update",
                "parameters": [
                    {
                        "description": "Device-profile ID (UUID string).",
                        "in": "path",
                        "name": "deviceProfile.id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateDeviceProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Update updates the given device-profile.",
                "tags": [
                    "DeviceProfileService"
                ]
            }
        },
        "/api/device-profiles/{id}": {
            "delete": {
                "operationId": "Delete",
                "parameters": [
                    {
                        "description": "Device-profile ID (UUID string).",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Delete deletes the device-profile matching the given id.",
                "tags": [
                    "DeviceProfileService"
                ]
            },
            "get": {
                "operationId": "Get",
                "parameters": [
                    {
                        "description": "Device-profile ID (UUID string).",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetDeviceProfileResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get returns the device-profile matching the given id.",
                "tags": [
                    "DeviceProfileService"
                ]
            }
        },
        "/api/device-provision": {
            "post": {
                "operationId": "Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiCreateResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Create - creates the given provisioned device.",
                "tags": [
                    "DeviceProvisioningService"
                ]
            }
        },
        "/api/device/{orgId}/device-history/{devId}": {
            "get": {
                "operationId": "GetDeviceHistory",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "devId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetDeviceHistoryResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/device/{orgId}/device-list": {
            "get": {
                "operationId": "GetDeviceList",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetDeviceListResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/device/{orgId}/device-mode/{devId}": {
            "post": {
                "operationId": "SetDeviceMode",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "devId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiSetDeviceModeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiSetDeviceModeResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/device/{orgId}/device-profile/{devId}": {
            "get": {
                "operationId": "GetDeviceProfile",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "devId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetDSDeviceProfileResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/devices": {
            "get": {
                "operationId": "List",
                "parameters": [
                    {
                        "description": "Max number of devices to return in the result-set.",
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Offset in the result-set (for pagination).",
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Application ID to filter on.",
                        "format": "int64",
                        "in": "query",
                        "name": "applicationID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Search on name or DevEUI.",
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Multicast-group ID to filter on (string formatted UUID).",
                        "in": "query",
                        "name": "multicastGroupID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Service-profile ID to filter on (string formatted UUID).",
                        "in": "query",
                        "name": "serviceProfileID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListDeviceResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List returns the available devices.",
                "tags": [
                    "DeviceService"
                ]
            },
            "post": {
                "operationId": "Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Create creates the given device.",
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/devices/{devEUI}": {
            "delete": {
                "operationId": "Delete",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Delete deletes the device matching the given DevEUI.",
                "tags": [
                    "DeviceService"
                ]
            },
            "get": {
                "operationId": "Get",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetDeviceResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get returns the device matching the given DevEUI.",
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/devices/{devEUI}/activation": {
            "delete": {
                "operationId": "Deactivate",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Deactivate de-activates the device.",
                "tags": [
                    "DeviceService"
                ]
            },
            "get": {
                "operationId": "GetActivation",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetDeviceActivationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "GetActivation returns the current activation details of the device (OTAA and ABP).",
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/devices/{devEUI}/events": {
            "get": {
                "operationId": "StreamEventLogs",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "schema": {
                            "description": "Stream result of extapiStreamDeviceEventLogsResponse",
                            "properties": {
                                "error": {
                                    "$ref": "#/definitions/runtimeStreamError"
                                },
                                "result": {
                                    "$ref": "#/definitions/extapiStreamDeviceEventLogsResponse"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "StreamEventLogs stream the device events (uplink payloads, ACKs, joins, errors).\n  * This endpoint is intended for debugging only.\n  * This endpoint does not work from a web-browser.",
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/devices/{devEUI}/frames": {
            "get": {
                "operationId": "StreamFrameLogs",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "schema": {
                            "description": "Stream result of extapiStreamDeviceFrameLogsResponse",
                            "properties": {
                                "error": {
                                    "$ref": "#/definitions/runtimeStreamError"
                                },
                                "result": {
                                    "$ref": "#/definitions/extapiStreamDeviceFrameLogsResponse"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "StreamFrameLogs streams the uplink and downlink frame-logs for the given DevEUI.\n  * These are the raw LoRaWAN frames and this endpoint is intended for debugging only.\n  * This endpoint does not work from a web-browser.",
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/devices/{devEUI}/fuota-deployments": {
            "post": {
                "operationId": "CreateForDevice",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateFUOTADeploymentForDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiCreateFUOTADeploymentForDeviceResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "CreateForDevice creates a deployment for the given DevEUI.",
                "tags": [
                    "FUOTADeploymentService"
                ]
            }
        },
        "/api/devices/{devEUI}/getRandomDevAddr": {
            "post": {
                "operationId": "GetRandomDevAddr",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetRandomDevAddrResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "GetRandomDevAddr returns a random DevAddr taking the NwkID prefix into account.",
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/devices/{devEUI}/keys": {
            "delete": {
                "operationId": "DeleteKeys",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "DeleteKeys deletes the device-keys for the given DevEUI.",
                "tags": [
                    "DeviceService"
                ]
            },
            "get": {
                "operationId": "GetKeys",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetDeviceKeysResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "GetKeys returns the device-keys for the given DevEUI.",
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/devices/{devEUI}/queue": {
            "delete": {
                "operationId": "Flush",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Flush flushes the downlink device-queue.",
                "tags": [
                    "DeviceQueueService"
                ]
            },
            "get": {
                "operationId": "List",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListDeviceQueueItemsResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List lists the items in the device-queue.",
                "tags": [
                    "DeviceQueueService"
                ]
            }
        },
        "/api/devices/{device.devEUI}": {
            "put": {
                "operationId": "Update",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "device.devEUI",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Update updates the device matching the given DevEUI.",
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/devices/{deviceActivation.devEUI}/activate": {
            "post": {
                "operationId": "Activate",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "deviceActivation.devEUI",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiActivateDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Activate (re)activates the device (only when ABP is set to true).",
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/devices/{deviceKeys.devEUI}/keys": {
            "post": {
                "operationId": "CreateKeys",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "deviceKeys.devEUI",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateDeviceKeysRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "CreateKeys creates the given device-keys.",
                "tags": [
                    "DeviceService"
                ]
            },
            "put": {
                "operationId": "UpdateKeys",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "deviceKeys.devEUI",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateDeviceKeysRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "UpdateKeys updates the device-keys.",
                "tags": [
                    "DeviceService"
                ]
            }
        },
        "/api/devices/{deviceQueueItem.devEUI}/queue": {
            "post": {
                "operationId": "Enqueue",
                "parameters": [
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "deviceQueueItem.devEUI",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiEnqueueDeviceQueueItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiEnqueueDeviceQueueItemResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Enqueue adds the given item to the device-queue.",
                "tags": [
                    "DeviceQueueService"
                ]
            }
        },
        "/api/dfi/profile": {
            "get": {
                "operationId": "AuthenticateUser",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiDFIAuthenticateUserResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "AuthenticateUser authenticates user with given jwt, return necessary user info for DFI service",
                "tags": [
                    "DFIService"
                ]
            }
        },
        "/api/dfi/top-up": {
            "get": {
                "operationId": "TopUp",
                "parameters": [
                    {
                        "description": "returned after call of authenticate user request, represent user's DD wallet.",
                        "format": "int64",
                        "in": "query",
                        "name": "organizationID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "the amount that user wants to top up margin wallet from DD wallet.",
                        "in": "query",
                        "name": "amount",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiTopUpResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "TopUp allows user to top up DFI margin wallet from DD wallet/supernode wallet",
                "tags": [
                    "DFIService"
                ]
            }
        },
        "/api/dfi/withdraw": {
            "get": {
                "operationId": "Withdraw",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "organizationID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "amount",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "DFIPoolBalance",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiWithdrawResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Withdraw allows user to withdraw from DFI margin wallet to DD wallet/supernode wallet",
                "tags": [
                    "DFIService"
                ]
            }
        },
        "/api/dhx-mining/bond": {
            "post": {
                "operationId": "DHXBond",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiDHXBondRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiDHXBondResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Bond DHX to mine DHX",
                "tags": [
                    "DHXServcie"
                ]
            }
        },
        "/api/dhx-mining/bond-info": {
            "post": {
                "operationId": "DHXBondInfo",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiDHXBondInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiDHXBondInfoResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get info about bonded, cooling off and unbonding DHX",
                "tags": [
                    "DHXServcie"
                ]
            }
        },
        "/api/dhx-mining/create-council": {
            "post": {
                "operationId": "DHXCreateCouncil",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiDHXCreateCouncilRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiDHXCreateCouncilResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Request to create a new council",
                "tags": [
                    "DHXServcie"
                ]
            }
        },
        "/api/dhx-mining/create-stake": {
            "post": {
                "operationId": "DHXCreateStake",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiDHXCreateStakeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiDHXCreateStakeResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Request to lockdrop for DHX pre-mining",
                "tags": [
                    "DHXServcie"
                ]
            }
        },
        "/api/dhx-mining/estimate": {
            "get": {
                "operationId": "DHXEstimateMining",
                "parameters": [
                    {
                        "description": "id of the organization for which estimates should be calculated.",
                        "format": "int64",
                        "in": "query",
                        "name": "orgId",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiDHXEstimateMiningResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "DHXEstimateMining estimates organization's mining based on lockdrops,\nbonded DHX and number of gateways",
                "tags": [
                    "DHXServcie"
                ]
            }
        },
        "/api/dhx-mining/history": {
            "get": {
                "operationId": "DHXMiningHistory",
                "parameters": [
                    {
                        "description": "organization for which the history is returned.",
                        "format": "int64",
                        "in": "query",
                        "name": "orgId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "the first day of the period.",
                        "format": "date-time",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "the last day of the period.",
                        "format": "date-time",
                        "in": "query",
                        "name": "till",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiDHXMiningHistoryResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Return info about DHX mining during the specified period",
                "tags": [
                    "DHXServcie"
                ]
            }
        },
        "/api/dhx-mining/last-mining": {
            "get": {
                "operationId": "DHXGetLastMining",
                "parameters": [
                    {
                        "description": "organization id. If specified return details for the given organization and the council it chairs.",
                        "format": "int64",
                        "in": "query",
                        "name": "orgId",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiDHXGetLastMiningResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Return info about the last paid day of DHX mining",
                "tags": [
                    "DHXServcie"
                ]
            }
        },
        "/api/dhx-mining/list-councils": {
            "get": {
                "operationId": "DHXListCouncils",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiDHXListCouncilsResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List all existing councils",
                "tags": [
                    "DHXServcie"
                ]
            }
        },
        "/api/dhx-mining/list-stakes": {
            "get": {
                "operationId": "DHXListStakes",
                "parameters": [
                    {
                        "description": "if not 0 then return stakes for the council chaired by the specified\norg. Only the council chair should be able to request this.",
                        "format": "int64",
                        "in": "query",
                        "name": "chairOrgId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "if not 0 then return stakes of the given organization. Only the org user\nshould be able to request this.",
                        "format": "int64",
                        "in": "query",
                        "name": "organizationId",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiDHXListStakesResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List all dhx stakes for the organization",
                "tags": [
                    "DHXServcie"
                ]
            }
        },
        "/api/dhx-mining/unbond": {
            "post": {
                "operationId": "DHXUnbond",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiDHXUnbondRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiDHXUnbondResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Unbond bonded DHX",
                "tags": [
                    "DHXServcie"
                ]
            }
        },
        "/api/external-login/authenticate-wechat-user": {
            "post": {
                "operationId": "AuthenticateWeChatUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiAuthenticateWeChatUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiAuthenticateWeChatUserResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "AuthenticateWeChatUser interacts with wechat open platform to authenticate wechat user\nthen check binding status of this wechat user",
                "tags": [
                    "ExternalUserService"
                ]
            }
        },
        "/api/external-login/bind-external-user": {
            "post": {
                "operationId": "BindExternalUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiBindExternalUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiBindExternalUserResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "BindExternalUser binds external user id to supernode user",
                "tags": [
                    "ExternalUserService"
                ]
            }
        },
        "/api/external-login/debug-authenticate-wechat-user": {
            "post": {
                "operationId": "DebugAuthenticateWeChatUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiAuthenticateWeChatUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiAuthenticateWeChatUserResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "DebugAuthenticateWeChatUser will only be called by debug mode",
                "tags": [
                    "ExternalUserService"
                ]
            }
        },
        "/api/external-login/register-external-user": {
            "post": {
                "operationId": "RegisterExternalUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiRegisterExternalUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiRegisterExternalUserResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "RegisterExternalUser creates new supernode account then bind it with external user id",
                "tags": [
                    "ExternalUserService"
                ]
            }
        },
        "/api/external-login/unbind-external-user": {
            "post": {
                "operationId": "UnbindExternalUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUnbindExternalUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiUnbindExternalUserResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "UnbindExternalUser unbinds external user and supernode user account",
                "tags": [
                    "ExternalUserService"
                ]
            }
        },
        "/api/fuota-deployments": {
            "get": {
                "operationId": "List",
                "parameters": [
                    {
                        "description": "Max number of deployments to return in the result-set.",
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Offset in the result-set (for pagination).",
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Application ID to filter on (optional).",
                        "format": "int64",
                        "in": "query",
                        "name": "applicationID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device EUI (HEX encoded) (optional).",
                        "in": "query",
                        "name": "devEUI",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListFUOTADeploymentResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List lists the fuota deployments.",
                "tags": [
                    "FUOTADeploymentService"
                ]
            }
        },
        "/api/fuota-deployments/{fuotaDeploymentID}/devices": {
            "get": {
                "operationId": "ListDeploymentDevices",
                "parameters": [
                    {
                        "description": "ID of the deployment (string formatted UUID).\nThis value will be automatically assigned on create.",
                        "in": "path",
                        "name": "fuotaDeploymentID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Max number of items to return.",
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Offset in the result-set (for pagination).",
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListFUOTADeploymentDevicesResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "ListDeploymentDevices lists the devices (and status) for the given fuota deployment ID.",
                "tags": [
                    "FUOTADeploymentService"
                ]
            }
        },
        "/api/fuota-deployments/{fuotaDeploymentID}/devices/{devEUI}": {
            "get": {
                "operationId": "GetDeploymentDevice",
                "parameters": [
                    {
                        "description": "ID of the deployment (string formatted UUID).\nThis value will be automatically assigned on create.",
                        "in": "path",
                        "name": "fuotaDeploymentID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device EUI (HEX encoded).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetFUOTADeploymentDeviceResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "GetDeploymentDevice returns the deployment device.",
                "tags": [
                    "FUOTADeploymentService"
                ]
            }
        },
        "/api/fuota-deployments/{id}": {
            "get": {
                "operationId": "Get",
                "parameters": [
                    {
                        "description": "ID of the deployment (string formatted UUID).\nThis value will be automatically assigned on create.",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetFUOTADeploymentResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get returns the fuota deployment for the given id.",
                "tags": [
                    "FUOTADeploymentService"
                ]
            }
        },
        "/api/gateway-profiles": {
            "get": {
                "operationId": "List",
                "parameters": [
                    {
                        "description": "Max number of items to return.",
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Offset in the result-set (for pagination).",
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Network-server ID to filter on (optional).",
                        "format": "int64",
                        "in": "query",
                        "name": "networkServerID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListGatewayProfilesResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List returns the existing gateway-profiles.",
                "tags": [
                    "GatewayProfileService"
                ]
            },
            "post": {
                "operationId": "Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateGatewayProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiCreateGatewayProfileResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Create creates the given gateway-profile.",
                "tags": [
                    "GatewayProfileService"
                ]
            }
        },
        "/api/gateway-profiles/{gatewayProfile.id}": {
            "put": {
                "operationId": "Update",
                "parameters": [
                    {
                        "description": "Gateway-profile ID (UUID string).",
                        "in": "path",
                        "name": "gatewayProfile.id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateGatewayProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Update updates the given gateway-profile.",
                "tags": [
                    "GatewayProfileService"
                ]
            }
        },
        "/api/gateway-profiles/{id}": {
            "delete": {
                "operationId": "Delete",
                "parameters": [
                    {
                        "description": "Gateway-profile id (UUID string).",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Delete deletes the gateway-profile matching the given id.",
                "tags": [
                    "GatewayProfileService"
                ]
            },
            "get": {
                "operationId": "Get",
                "parameters": [
                    {
                        "description": "Gateway-profile ID (UUID string).",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetGatewayProfileResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get returns the gateway-profile matching the given id.",
                "tags": [
                    "GatewayProfileService"
                ]
            }
        },
        "/api/gateway/update-firmware": {
            "post": {
                "operationId": "ManualTriggerUpdateFirmware",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiManualTriggerUpdateFirmwareRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiManualTriggerUpdateFirmwareResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateway/{orgId}/gateway-history/{gwId}": {
            "get": {
                "operationId": "GetGatewayHistory",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "gwId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetGatewayHistoryResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateway/{orgId}/gateway-list": {
            "get": {
                "operationId": "GetGatewayList",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetGatewayListResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateway/{orgId}/gateway-mode/{gwId}": {
            "post": {
                "operationId": "SetGatewayMode",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "gwId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiSetGatewayModeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiSetGatewayModeResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateway/{orgId}/gateway-profile/{gwId}": {
            "get": {
                "operationId": "GetGatewayProfile",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "gwId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetGSGatewayProfileResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways": {
            "get": {
                "operationId": "List",
                "parameters": [
                    {
                        "description": "Max number of nodes to return in the result-set.",
                        "format": "int32",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Offset of the result-set (for pagination).",
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "ID of the organization for which to filter on, when left blank the\nresponse will return all gateways to which the user has access to.",
                        "format": "int64",
                        "in": "query",
                        "name": "organizationID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Search on name or gateway MAC (optional).",
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListGatewayResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List lists the gateways.",
                "tags": [
                    "GatewayService"
                ]
            },
            "post": {
                "operationId": "Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateGatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Create creates the given gateway.",
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways-loc": {
            "get": {
                "operationId": "ListLocations",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListGatewayLocationsResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "ListLocations lists the gateways locations.",
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/default-config/add": {
            "post": {
                "operationId": "InsertNewDefaultGatewayConfig",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiInsertNewDefaultGatewayConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiInsertNewDefaultGatewayConfigResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/default-config/batch-reset": {
            "put": {
                "operationId": "BatchResetDefaultGatewatConfig",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiBatchResetDefaultGatewatConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiBatchResetDefaultGatewatConfigResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/default-config/get": {
            "get": {
                "operationId": "GetDefaultGatewayConfig",
                "parameters": [
                    {
                        "in": "query",
                        "name": "model",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "region",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetDefaultGatewayConfigResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/default-config/reset": {
            "put": {
                "operationId": "ResetDefaultGatewatConfigByID",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiResetDefaultGatewatConfigByIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiResetDefaultGatewatConfigByIDResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/default-config/update": {
            "put": {
                "operationId": "UpdateDefaultGatewayConfig",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateDefaultGatewayConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateDefaultGatewayConfigResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/getconfig/{gatewayId}": {
            "get": {
                "operationId": "GetGwConfig",
                "parameters": [
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetGwConfigResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/getpassword/{gatewayId}": {
            "get": {
                "operationId": "GetGwPwd",
                "parameters": [
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sn",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetGwPwdResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/register": {
            "post": {
                "operationId": "Register",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiRegisterResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/register-reseller": {
            "post": {
                "operationId": "RegisterReseller",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiRegisterResellerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiRegisterResellerResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/set-auto-update/{gatewayId}": {
            "put": {
                "operationId": "SetAutoUpdateFirmware",
                "parameters": [
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiSetAutoUpdateFirmwareRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiSetAutoUpdateFirmwareResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/updateconfig/{gatewayId}": {
            "put": {
                "operationId": "UpdateGwConfig",
                "parameters": [
                    {
                        "in": "path",
                        "name": "gatewayId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateGwConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateGwConfigResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/{gateway.id}": {
            "put": {
                "operationId": "Update",
                "parameters": [
                    {
                        "description": "Gateway ID (HEX encoded).",
                        "in": "path",
                        "name": "gateway.id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateGatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Update updates the gateway matching the given mac address.",
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/{gatewayID}/frames": {
            "get": {
                "operationId": "StreamFrameLogs",
                "parameters": [
                    {
                        "description": "Gateway ID (HEX encoded).",
                        "in": "path",
                        "name": "gatewayID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "schema": {
                            "description": "Stream result of extapiStreamGatewayFrameLogsResponse",
                            "properties": {
                                "error": {
                                    "$ref": "#/definitions/runtimeStreamError"
                                },
                                "result": {
                                    "$ref": "#/definitions/extapiStreamGatewayFrameLogsResponse"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "StreamFrameLogs streams the uplink and downlink frame-logs for the given gateway ID.\nNotes:\n  * These are the raw LoRaWAN frames and this endpoint is intended for debugging only.\n  * This endpoint does not work from a web-browser.",
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/{gatewayID}/pings/last": {
            "get": {
                "operationId": "GetLastPing",
                "parameters": [
                    {
                        "description": "Gateway ID (HEX encoded).",
                        "in": "path",
                        "name": "gatewayID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetLastPingResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "GetLastPing returns the last emitted ping and gateways receiving this ping.",
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/{gatewayID}/stats": {
            "get": {
                "operationId": "GetStats",
                "parameters": [
                    {
                        "description": "Gateway ID (HEX encoded).",
                        "in": "path",
                        "name": "gatewayID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Aggregation interval.  One of \"second\", \"minute\", \"hour\", \"day\", \"week\",\n\"month\", \"quarter\", \"year\".  Case insensitive.",
                        "in": "query",
                        "name": "interval",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Timestamp to start from.",
                        "format": "date-time",
                        "in": "query",
                        "name": "startTimestamp",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Timestamp until to get from.",
                        "format": "date-time",
                        "in": "query",
                        "name": "endTimestamp",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetGatewayStatsResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "GetStats lists the gateway stats given the query parameters.",
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/gateways/{id}": {
            "delete": {
                "operationId": "Delete",
                "parameters": [
                    {
                        "description": "Gateway ID (HEX encoded).",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Delete deletes the gateway matching the given mac address.",
                "tags": [
                    "GatewayService"
                ]
            },
            "get": {
                "operationId": "Get",
                "parameters": [
                    {
                        "description": "Gateway ID (HEX encoded).",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetGatewayResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get returns the gateway for the requested mac address.",
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/internal/branding": {
            "get": {
                "operationId": "Branding",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiBrandingResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get the branding for the UI",
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/confirm-password-reset": {
            "post": {
                "operationId": "ConfirmPasswordReset",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiConfirmPasswordResetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiPasswordResetResp"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/login": {
            "post": {
                "operationId": "Login",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiLoginResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Log the user in, returns JWT",
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/login-2fa": {
            "post": {
                "operationId": "Login2FA",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiLogin2FARequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiLoginResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Validate OTP, returns JWT",
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/profile": {
            "get": {
                "operationId": "Profile",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiProfileResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get the current user's profile",
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/registration": {
            "post": {
                "operationId": "RegisterUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiRegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/registration-confirm": {
            "post": {
                "operationId": "ConfirmRegistration",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiConfirmRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiConfirmRegistrationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/registration-finish": {
            "post": {
                "operationId": "FinishRegistration",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiFinishRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/request-password-reset": {
            "post": {
                "operationId": "RequestPasswordReset",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiPasswordResetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiPasswordResetResp"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/search": {
            "get": {
                "operationId": "GlobalSearch",
                "parameters": [
                    {
                        "description": "Search query.",
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Max number of results to return.",
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Offset offset of the result-set (for pagination).",
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGlobalSearchResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Perform a global search.",
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/totp-configuration": {
            "post": {
                "operationId": "GetTOTPConfiguration",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiGetTOTPConfigurationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetTOTPConfigurationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/totp-disable": {
            "post": {
                "operationId": "DisableTOTP",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiTOTPStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiTOTPStatusResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/totp-enable": {
            "post": {
                "operationId": "EnableTOTP",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiTOTPStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiTOTPStatusResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/totp-recovery-codes": {
            "post": {
                "operationId": "GetRecoveryCodes",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiGetRecoveryCodesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetRecoveryCodesResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/totp-status": {
            "get": {
                "operationId": "GetTOTPStatus",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiTOTPStatusResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/internal/verify-g-recaptcha": {
            "post": {
                "operationId": "GetVerifyingGoogleRecaptcha",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiGoogleRecaptchaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGoogleRecaptchaResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "InternalService"
                ]
            }
        },
        "/api/mosquitto-auth/acl-check": {
            "post": {
                "operationId": "CheckACL",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCheckACLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiCheckACLResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "This will be called by mosquitto auth plugin JWT backend, request and response are also defined there",
                "tags": [
                    "MosquittoAuthService"
                ]
            }
        },
        "/api/mosquitto-auth/get-user": {
            "post": {
                "operationId": "JWTAuthentication",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiJWTAuthenticationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiJWTAuthenticationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "This will be called by mosquitto auth plugin JWT backend, request and response are also defined there",
                "tags": [
                    "MosquittoAuthService"
                ]
            }
        },
        "/api/mosquitto-auth/login": {
            "post": {
                "operationId": "GetJWT",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiGetJWTRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetJWTResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get JWT for mosquitto auth with given org id\nOnly accessible for authenticated supernode user",
                "tags": [
                    "MosquittoAuthService"
                ]
            }
        },
        "/api/mosquitto-auth/send-command": {
            "get": {
                "operationId": "SendCommandToDevice",
                "parameters": [
                    {
                        "in": "query",
                        "name": "devEui",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "organizationId",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiSendCommandToDeviceResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "SendCommandToDevice takes device eui as request paramter,\nreturns topics that can be used to send command to a specific device",
                "tags": [
                    "MosquittoAuthService"
                ]
            }
        },
        "/api/mosquitto-auth/subscribe-application-events": {
            "get": {
                "operationId": "SubsribeApplicationEvents",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "applicationId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "organizationId",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiSubsribeApplicationEventsResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "SubsribeApplication takes application id as request parameter,\nreturns topics that can be used to subscribe to all devices' events under same application",
                "tags": [
                    "MosquittoAuthService"
                ]
            }
        },
        "/api/mosquitto-auth/subscribe-device-events": {
            "get": {
                "operationId": "SubsribeDeviceEvents",
                "parameters": [
                    {
                        "in": "query",
                        "name": "devEui",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "organizationId",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiSubsribeDeviceEventsResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "SubsribeDeviceEvents takes device eui as request parameter,\nreturns topis that can be used to subscribe to all device events or one specific event",
                "tags": [
                    "MosquittoAuthService"
                ]
            }
        },
        "/api/multicast-groups": {
            "get": {
                "operationId": "List",
                "parameters": [
                    {
                        "description": "Max number of items to return.",
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Offset in the result-set (for pagination).",
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Organization id to filter on.",
                        "format": "int64",
                        "in": "query",
                        "name": "organizationID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device EUI (HEX encoded string) to filter on.",
                        "in": "query",
                        "name": "devEUI",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Service-profile ID to filter on.",
                        "in": "query",
                        "name": "serviceProfileID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Search can be used to search on the multicast-group name.",
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListMulticastGroupResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List lists the available multicast-groups.",
                "tags": [
                    "MulticastGroupService"
                ]
            },
            "post": {
                "operationId": "Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateMulticastGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiCreateMulticastGroupResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Create creates the given multicast-group.",
                "tags": [
                    "MulticastGroupService"
                ]
            }
        },
        "/api/multicast-groups/{id}": {
            "delete": {
                "operationId": "Delete",
                "parameters": [
                    {
                        "description": "ID (string formatted UUID).",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Delete deletes a multicast-group given an ID.",
                "tags": [
                    "MulticastGroupService"
                ]
            },
            "get": {
                "operationId": "Get",
                "parameters": [
                    {
                        "description": "ID (string formatted UUID).",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetMulticastGroupResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get returns a multicast-group given an ID.",
                "tags": [
                    "MulticastGroupService"
                ]
            }
        },
        "/api/multicast-groups/{multicastGroup.id}": {
            "put": {
                "operationId": "Update",
                "parameters": [
                    {
                        "description": "ID (string formatted UUID).\nThis will be generated automatically on create.",
                        "in": "path",
                        "name": "multicastGroup.id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateMulticastGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Update updates the given multicast-group.",
                "tags": [
                    "MulticastGroupService"
                ]
            }
        },
        "/api/multicast-groups/{multicastGroupID}/devices": {
            "post": {
                "operationId": "AddDevice",
                "parameters": [
                    {
                        "description": "Multicast-group ID (string formatted UUID).",
                        "in": "path",
                        "name": "multicastGroupID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiAddDeviceToMulticastGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "AddDevice adds the given device to the multicast-group.",
                "tags": [
                    "MulticastGroupService"
                ]
            }
        },
        "/api/multicast-groups/{multicastGroupID}/devices/{devEUI}": {
            "delete": {
                "operationId": "RemoveDevice",
                "parameters": [
                    {
                        "description": "Multicast-group ID (string formatted UUID).",
                        "in": "path",
                        "name": "multicastGroupID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device EUI (HEX encoded string).",
                        "in": "path",
                        "name": "devEUI",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "RemoveDevice removes the given device from the multicast-group.",
                "tags": [
                    "MulticastGroupService"
                ]
            }
        },
        "/api/multicast-groups/{multicastGroupID}/queue": {
            "delete": {
                "operationId": "FlushQueue",
                "parameters": [
                    {
                        "description": "Multicast-group ID (string formatted UUID).",
                        "in": "path",
                        "name": "multicastGroupID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "FlushQueue flushes the multicast-group queue.",
                "tags": [
                    "MulticastGroupService"
                ]
            },
            "get": {
                "operationId": "ListQueue",
                "parameters": [
                    {
                        "description": "Multicast-group ID (string formatted UUID).",
                        "in": "path",
                        "name": "multicastGroupID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListMulticastGroupQueueItemsResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "ListQueue lists the items in the multicast-group queue.",
                "tags": [
                    "MulticastGroupService"
                ]
            }
        },
        "/api/multicast-groups/{multicastQueueItem.multicastGroupID}/queue": {
            "post": {
                "operationId": "Enqueue",
                "parameters": [
                    {
                        "description": "Multicast-group ID (string formatted UUID).",
                        "in": "path",
                        "name": "multicastQueueItem.multicastGroupID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiEnqueueMulticastQueueItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiEnqueueMulticastQueueItemResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Enqueue adds the given item to the multicast-queue.",
                "tags": [
                    "MulticastGroupService"
                ]
            }
        },
        "/api/network-servers": {
            "get": {
                "operationId": "List",
                "parameters": [
                    {
                        "description": "Max number of items to return.",
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Offset in the result-set (for pagination).",
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Organization id to filter on.",
                        "format": "int64",
                        "in": "query",
                        "name": "organizationID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListNetworkServerResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List lists the available network-servers.",
                "tags": [
                    "NetworkServerService"
                ]
            },
            "post": {
                "operationId": "Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateNetworkServerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiCreateNetworkServerResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Create creates the given network-server.",
                "tags": [
                    "NetworkServerService"
                ]
            }
        },
        "/api/network-servers/{id}": {
            "delete": {
                "operationId": "Delete",
                "parameters": [
                    {
                        "description": "Network-server ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Delete deletes the network-server matching the given id.",
                "tags": [
                    "NetworkServerService"
                ]
            },
            "get": {
                "operationId": "Get",
                "parameters": [
                    {
                        "description": "Network-server ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetNetworkServerResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get returns the network-server matching the given id.",
                "tags": [
                    "NetworkServerService"
                ]
            }
        },
        "/api/network-servers/{networkServer.id}": {
            "put": {
                "operationId": "Update",
                "parameters": [
                    {
                        "description": "Network-server ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "networkServer.id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateNetworkServerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Update updates the given network-server.",
                "tags": [
                    "NetworkServerService"
                ]
            }
        },
        "/api/new-gateways": {
            "get": {
                "operationId": "ListNewGateways",
                "parameters": [
                    {
                        "description": "Max number of nodes to return in the result-set.",
                        "format": "int32",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Offset of the result-set (for pagination).",
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "ID of the organization for which to filter on, when left blank the\nresponse will return all gateways to which the user has access to.",
                        "format": "int64",
                        "in": "query",
                        "name": "organizationID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Search on name or gateway MAC (optional).",
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListGatewayResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List lists the gateways.",
                "tags": [
                    "GatewayService"
                ]
            }
        },
        "/api/organizations": {
            "get": {
                "operationId": "List",
                "parameters": [
                    {
                        "description": "Max number of organizations to return in the result-set.",
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Offset in the result-set (for pagination).",
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "When provided, the given string will be used to search on\ndisplayName.",
                        "in": "query",
                        "name": "search",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListOrganizationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get organization list.",
                "tags": [
                    "OrganizationService"
                ]
            },
            "post": {
                "operationId": "Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiCreateOrganizationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Create a new organization.",
                "tags": [
                    "OrganizationService"
                ]
            }
        },
        "/api/organizations/{id}": {
            "delete": {
                "operationId": "Delete",
                "parameters": [
                    {
                        "description": "Organization ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Delete an organization.",
                "tags": [
                    "OrganizationService"
                ]
            },
            "get": {
                "operationId": "Get",
                "parameters": [
                    {
                        "description": "Organization ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetOrganizationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get data for a particular organization.",
                "tags": [
                    "OrganizationService"
                ]
            }
        },
        "/api/organizations/{organization.id}": {
            "put": {
                "operationId": "Update",
                "parameters": [
                    {
                        "description": "Organization ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "organization.id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Update an existing organization.",
                "tags": [
                    "OrganizationService"
                ]
            }
        },
        "/api/organizations/{organizationID}/users": {
            "get": {
                "operationId": "ListUsers",
                "parameters": [
                    {
                        "description": "Organization ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "organizationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Max number of users to return in the result-set.",
                        "format": "int32",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Offset in the result-set (for pagination).",
                        "format": "int32",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListOrganizationUsersResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get organization's user list.",
                "tags": [
                    "OrganizationService"
                ]
            }
        },
        "/api/organizations/{organizationID}/users/{userID}": {
            "delete": {
                "operationId": "DeleteUser",
                "parameters": [
                    {
                        "description": "Organization ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "organizationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "User ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "userID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Delete a user from an organization.",
                "tags": [
                    "OrganizationService"
                ]
            },
            "get": {
                "operationId": "GetUser",
                "parameters": [
                    {
                        "description": "Organization ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "organizationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "User ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "userID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetOrganizationUserResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get data for a particular organization user.",
                "tags": [
                    "OrganizationService"
                ]
            }
        },
        "/api/organizations/{organizationUser.organizationID}/users": {
            "post": {
                "operationId": "AddUser",
                "parameters": [
                    {
                        "description": "Organization ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "organizationUser.organizationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiAddOrganizationUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Add a new user to an organization.",
                "tags": [
                    "OrganizationService"
                ]
            }
        },
        "/api/organizations/{organizationUser.organizationID}/users/{organizationUser.userID}": {
            "put": {
                "operationId": "UpdateUser",
                "parameters": [
                    {
                        "description": "Organization ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "organizationUser.organizationID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "User ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "organizationUser.userID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateOrganizationUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Update a user in an organization.",
                "tags": [
                    "OrganizationService"
                ]
            }
        },
        "/api/report/mining-income/csv": {
            "get": {
                "operationId": "MiningReportCSV",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "organizationId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "accept string array for example: ETH_MXC or ETH_MXC\\nDHX or DHX.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "currency",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "fiatCurrency",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "decimals",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "schema": {
                            "description": "Stream result of extapiMiningReportResponse",
                            "properties": {
                                "error": {
                                    "$ref": "#/definitions/runtimeStreamError"
                                },
                                "result": {
                                    "$ref": "#/definitions/extapiMiningReportResponse"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Request to download miningReport in csv format filtered by date",
                "tags": [
                    "ReportService"
                ]
            }
        },
        "/api/report/mining-income/pdf": {
            "get": {
                "operationId": "MiningReportPDF",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "organizationId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "accept string array for example: ETH_MXC or ETH_MXC\\nDHX or DHX.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "currency",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "fiatCurrency",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "start",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "end",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "decimals",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "schema": {
                            "description": "Stream result of extapiMiningReportResponse",
                            "properties": {
                                "error": {
                                    "$ref": "#/definitions/runtimeStreamError"
                                },
                                "result": {
                                    "$ref": "#/definitions/extapiMiningReportResponse"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Request to download miningReport in pdf filtered by date",
                "tags": [
                    "ReportService"
                ]
            }
        },
        "/api/report/supported-fiat-currencies": {
            "get": {
                "operationId": "GetFiatCurrencyList",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetFiatCurrencyListResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get support fiat currency list",
                "tags": [
                    "ReportService"
                ]
            }
        },
        "/api/server-info/appserver-version": {
            "get": {
                "operationId": "GetAppserverVersion",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetAppserverVersionResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "get version",
                "tags": [
                    "ServerInfoService"
                ]
            }
        },
        "/api/server-info/mxprotocol-server-version": {
            "get": {
                "operationId": "GetMxprotocolServerVersion",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetMxprotocolServerVersionResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "ServerInfoService"
                ]
            }
        },
        "/api/server-info/server-region": {
            "get": {
                "operationId": "GetServerRegion",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetServerRegionResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "ServerInfoService"
                ]
            }
        },
        "/api/service-profiles": {
            "get": {
                "operationId": "List",
                "parameters": [
                    {
                        "description": "Max number of items to return.",
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Offset in the result-set (for pagination).",
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Organization id to filter on.",
                        "format": "int64",
                        "in": "query",
                        "name": "organizationID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListServiceProfileResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "List lists the available service-profiles.",
                "tags": [
                    "ServiceProfileService"
                ]
            },
            "post": {
                "operationId": "Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateServiceProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiCreateServiceProfileResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Create creates the given service-profile.",
                "tags": [
                    "ServiceProfileService"
                ]
            }
        },
        "/api/service-profiles/{id}": {
            "delete": {
                "operationId": "Delete",
                "parameters": [
                    {
                        "description": "Service-profile ID (UUID string).",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Delete deletes the service-profile matching the given id.",
                "tags": [
                    "ServiceProfileService"
                ]
            },
            "get": {
                "operationId": "Get",
                "parameters": [
                    {
                        "description": "Service-profile ID (UUID string).",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetServiceProfileResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get returns the service-profile matching the given id.",
                "tags": [
                    "ServiceProfileService"
                ]
            }
        },
        "/api/service-profiles/{serviceProfile.id}": {
            "put": {
                "operationId": "Update",
                "parameters": [
                    {
                        "description": "Service-profile ID (UUID string).\nThis will be automatically set on create.",
                        "in": "path",
                        "name": "serviceProfile.id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateServiceProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Update updates the given serviceprofile.",
                "tags": [
                    "ServiceProfileService"
                ]
            }
        },
        "/api/settings": {
            "get": {
                "operationId": "GetSettings",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetSettingsResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "SettingsService"
                ]
            },
            "put": {
                "operationId": "ModifySettings",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiModifySettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiModifySettingsResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "SettingsService"
                ]
            }
        },
        "/api/shopify-integration/orders": {
            "get": {
                "operationId": "GetOrdersByUser",
                "parameters": [
                    {
                        "description": "user's email address for supernode account.",
                        "in": "query",
                        "name": "email",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetOrdersByUserResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "GetOrdersByUser returns a list of shopify orders filtered by given email, this API is only open for global admin user",
                "tags": [
                    "ShopifyIntegration"
                ]
            }
        },
        "/api/staking/staking_percentage": {
            "get": {
                "operationId": "GetStakingPercentage",
                "parameters": [
                    {
                        "description": "int64 org_id = 1;.",
                        "in": "query",
                        "name": "currency",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiStakingPercentageResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get information about staking percentage and boosts for lockin stake",
                "tags": [
                    "StakingService"
                ]
            }
        },
        "/api/staking/{orgId}/activestakes": {
            "get": {
                "operationId": "GetActiveStakes",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetActiveStakesResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get list of active stakes",
                "tags": [
                    "StakingService"
                ]
            }
        },
        "/api/staking/{orgId}/history": {
            "get": {
                "operationId": "GetStakingHistory",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "till",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiStakingHistoryResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "StakingService"
                ]
            }
        },
        "/api/staking/{orgId}/revenue": {
            "get": {
                "operationId": "GetStakingRevenue",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "till",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiStakingRevenueResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "StakingService"
                ]
            }
        },
        "/api/staking/{orgId}/stake": {
            "post": {
                "operationId": "Stake",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiStakeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiStakeResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Make new stake",
                "tags": [
                    "StakingService"
                ]
            }
        },
        "/api/staking/{orgId}/stake-info": {
            "get": {
                "operationId": "StakeInfo",
                "parameters": [
                    {
                        "description": "organization id that owns the stake",
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "the stake ID.",
                        "format": "int64",
                        "in": "query",
                        "name": "stakeId",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiStakeInfoResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Returns info about the stake, including all the revenues",
                "tags": [
                    "StakingService"
                ]
            }
        },
        "/api/staking/{orgId}/unstake": {
            "post": {
                "operationId": "Unstake",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUnstakeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiUnstakeResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Unstake existing stake",
                "tags": [
                    "StakingService"
                ]
            }
        },
        "/api/top-up/account": {
            "get": {
                "operationId": "GetTopUpDestination",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "orgId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetTopUpDestinationResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "TopUpService"
                ]
            }
        },
        "/api/top-up/history": {
            "post": {
                "operationId": "GetTopUpHistory",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiGetTopUpHistoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetTopUpHistoryResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "TopUpService"
                ]
            }
        },
        "/api/users": {
            "get": {
                "operationId": "List",
                "parameters": [
                    {
                        "description": "Max number of user to return in the result-set.",
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Offset in the result-set (for pagination).",
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiListUserResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get user list.",
                "tags": [
                    "UserService"
                ]
            },
            "post": {
                "operationId": "Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiCreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiCreateUserResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Create a new user.",
                "tags": [
                    "UserService"
                ]
            }
        },
        "/api/users/email/{userEmail}": {
            "get": {
                "operationId": "GetUserEmail",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userEmail",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetUserEmailResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "UserService"
                ]
            }
        },
        "/api/users/otp/{userEmail}": {
            "get": {
                "operationId": "GetOTPCode",
                "parameters": [
                    {
                        "in": "path",
                        "name": "userEmail",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetOTPCodeResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "UserService"
                ]
            }
        },
        "/api/users/{id}": {
            "delete": {
                "operationId": "Delete",
                "parameters": [
                    {
                        "description": "User ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Delete a user.",
                "tags": [
                    "UserService"
                ]
            },
            "get": {
                "operationId": "Get",
                "parameters": [
                    {
                        "description": "User ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetUserResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Get data for a particular user.",
                "tags": [
                    "UserService"
                ]
            }
        },
        "/api/users/{user.id}": {
            "put": {
                "operationId": "Update",
                "parameters": [
                    {
                        "description": "User ID.\nWill be set automatically on create.",
                        "format": "int64",
                        "in": "path",
                        "name": "user.id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateUserResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "Update an existing user.",
                "tags": [
                    "UserService"
                ]
            }
        },
        "/api/users/{userId}/password": {
            "put": {
                "operationId": "UpdatePassword",
                "parameters": [
                    {
                        "description": "User ID.",
                        "format": "int64",
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiUpdateUserPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "properties": {}
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "UpdatePassword updates a password.",
                "tags": [
                    "UserService"
                ]
            }
        },
        "/api/verify-external-email": {
            "post": {
                "operationId": "VerifyEmail",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiVerifyEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiVerifyEmailResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "VerifyEmail sends email with confirmation message to given address",
                "tags": [
                    "ExternalUserService"
                ]
            }
        },
        "/api/wallet/balance": {
            "get": {
                "operationId": "GetWalletBalance",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "userId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "orgId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetWalletBalanceResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "WalletService"
                ]
            }
        },
        "/api/wallet/mining_health": {
            "get": {
                "operationId": "GetGatewayMiningHealth",
                "parameters": [
                    {
                        "description": "organization_id.",
                        "format": "int64",
                        "in": "query",
                        "name": "orgId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "list of gateways for which the health should be returned. If empty, then\nhealth of all the gateways of the organization will be returned.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "gatewayMac",
                        "required": false,
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetGatewayMiningHealthResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "WalletService"
                ]
            }
        },
        "/api/wallet/mining_income": {
            "get": {
                "operationId": "GetWalletMiningIncome",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "orgId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "till",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetWalletMiningIncomeResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "WalletService"
                ]
            }
        },
        "/api/wallet/mining_income_gw": {
            "get": {
                "operationId": "GetGatewayMiningIncome",
                "parameters": [
                    {
                        "description": "MAC address of the gateway.",
                        "in": "query",
                        "name": "gatewayMac",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Organization ID.",
                        "format": "int64",
                        "in": "query",
                        "name": "orgId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Return mining stats for the period starting at from_date and ending at\ntill_date inclusive.",
                        "format": "date-time",
                        "in": "query",
                        "name": "fromDate",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "tillDate",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetGatewayMiningIncomeResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "return daily and total mining amounts for the given gateway and period of time",
                "tags": [
                    "WalletService"
                ]
            }
        },
        "/api/wallet/mining_info": {
            "get": {
                "operationId": "GetMiningInfo",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "orgId",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetMiningInfoResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "WalletService"
                ]
            }
        },
        "/api/wallet/mxc_price": {
            "get": {
                "operationId": "GetMXCprice",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "userId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "orgId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "mxcPrice",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetMXCpriceResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "WalletService"
                ]
            }
        },
        "/api/wallet/top-up-mining-fuel": {
            "post": {
                "operationId": "TopUpGatewayMiningFuel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiTopUpGatewayMiningFuelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiTopUpGatewayMiningFuelResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "WalletService"
                ]
            }
        },
        "/api/wallet/tx-history": {
            "get": {
                "operationId": "GetTransactionHistory",
                "parameters": [
                    {
                        "description": "organization id.",
                        "format": "int64",
                        "in": "query",
                        "name": "orgId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "currency.",
                        "in": "query",
                        "name": "currency",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "period for which transactions should be returned.",
                        "format": "date-time",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "till",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "if non-empty list of payment types is given only transactions of these\ntypes will be returned.",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "paymentType",
                        "required": false,
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetTransactionHistoryResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "WalletService"
                ]
            }
        },
        "/api/wallet/withdraw-mining-fuel": {
            "post": {
                "operationId": "WithdrawGatewayMiningFuel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiWithdrawGatewayMiningFuelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiWithdrawGatewayMiningFuelResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "WalletService"
                ]
            }
        },
        "/api/wallet/{orgId}/downlink_price": {
            "get": {
                "operationId": "GetDlPrice",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetDownLinkPriceResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "WalletService"
                ]
            }
        },
        "/api/wallet/{orgId}/tx-history": {
            "get": {
                "operationId": "GetVmxcTxHistory",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetVmxcTxHistoryResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "WalletService"
                ]
            }
        },
        "/api/wallet/{orgId}/usage-history": {
            "get": {
                "operationId": "GetNetworkUsageHist",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "path",
                        "name": "orgId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "till",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetNetworkUsageHistResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "WalletService"
                ]
            }
        },
        "/api/withdraw/get-withdraw-fee": {
            "get": {
                "operationId": "GetWithdrawFee",
                "parameters": [
                    {
                        "description": "type of crypto currency.",
                        "in": "query",
                        "name": "currency",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetWithdrawFeeResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "GetWithdrawFee data for current withdraw fee",
                "tags": [
                    "WithdrawService"
                ]
            }
        },
        "/api/withdraw/history": {
            "get": {
                "operationId": "GetWithdrawHistory",
                "parameters": [
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "orgId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "till",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetWithdrawHistoryResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "WithdrawService"
                ]
            }
        },
        "/api/withdraw/modify-withdraw-fee": {
            "put": {
                "operationId": "ModifyWithdrawFee",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiModifyWithdrawFeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiModifyWithdrawFeeResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "tags": [
                    "WithdrawService"
                ]
            }
        },
        "/api/withdraw/req": {
            "post": {
                "operationId": "GetWithdraw",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extapiGetWithdrawRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "schema": {
                            "$ref": "#/definitions/extapiGetWithdrawResponse"
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "schema": {
                            "$ref": "#/definitions/runtimeError"
                        }
                    }
                },
                "summary": "after user clicks withdraw, send withdraw request to cobo directly",
                "tags": [
                    "WithdrawService"
                ]
            }
        }
    },
    "definitions": {
        "commonLocation": {
            "properties": {
                "accuracy": {
                    "description": "Accuracy (in meters).",
                    "format": "int64",
                    "type": "integer"
                },
                "altitude": {
                    "description": "Altitude.",
                    "format": "double",
                    "type": "number"
                },
                "latitude": {
                    "description": "Latitude.",
                    "format": "double",
                    "type": "number"
                },
                "longitude": {
                    "description": "Longitude.",
                    "format": "double",
                    "type": "number"
                },
                "source": {
                    "$ref": "#/definitions/commonLocationSource",
                    "description": "Location source."
                }
            },
            "type": "object"
        },
        "commonLocationSource": {
            "default": "UNKNOWN",
            "description": " - UNKNOWN: Unknown.\n - GPS: GPS.\n - CONFIG: Manually configured.\n - GEO_RESOLVER_TDOA: Geo resolver (TDOA).\n - GEO_RESOLVER_RSSI: Geo resolver (RSSI).\n - GEO_RESOLVER_GNSS: Geo resolver (GNSS).\n - GEO_RESOLVER_WIFI: Geo resolver (WIFI).",
            "enum": [
                "UNKNOWN",
                "GPS",
                "CONFIG",
                "GEO_RESOLVER_TDOA",
                "GEO_RESOLVER_RSSI",
                "GEO_RESOLVER_GNSS",
                "GEO_RESOLVER_WIFI"
            ],
            "type": "string"
        },
        "commonModulation": {
            "default": "LORA",
            "description": "- LORA: LoRa\n - FSK: FSK\n - LR_FHSS: LR-FHSS",
            "enum": [
                "LORA",
                "FSK",
                "LR_FHSS"
            ],
            "type": "string"
        },
        "extapiActivateDeviceRequest": {
            "properties": {
                "deviceActivation": {
                    "$ref": "#/definitions/extapiDeviceActivation"
                }
            },
            "type": "object"
        },
        "extapiAddDeviceToMulticastGroupRequest": {
            "properties": {
                "devEUI": {
                    "description": "Device EUI (HEX encoded string).\nNote that the device must be under the same service-profile as the\nmulticast-group.",
                    "type": "string"
                },
                "multicastGroupID": {
                    "description": "Multicast-group ID (string formatted UUID).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiAddOrganizationUserRequest": {
            "properties": {
                "organizationUser": {
                    "$ref": "#/definitions/extapiOrganizationUser",
                    "description": "Organization-user object to create."
                }
            },
            "type": "object"
        },
        "extapiApplication": {
            "properties": {
                "description": {
                    "description": "Description of the application.",
                    "type": "string"
                },
                "id": {
                    "description": "Application ID.\nThis will be automatically assigned on create.",
                    "format": "int64",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the application (must be unique).",
                    "type": "string"
                },
                "organizationID": {
                    "description": "ID of the organization to which the application belongs.\nAfter create, this can not be modified.",
                    "format": "int64",
                    "type": "string"
                },
                "payloadCodec": {
                    "description": "Payload codec.\nNOTE: These field have moved to the device-profile and will be removed\nin the next major release. When set, the device-profile payload_ fields\nhave priority over the application payload_ fields.",
                    "type": "string"
                },
                "payloadDecoderScript": {
                    "description": "Payload decoder script.\nNOTE: These field have moved to the device-profile and will be removed\nin the next major release. When set, the device-profile payload_ fields\nhave priority over the application payload_ fields.",
                    "type": "string"
                },
                "payloadEncoderScript": {
                    "description": "Payload encoder script.\nNOTE: These field have moved to the device-profile and will be removed\nin the next major release. When set, the device-profile payload_ fields\nhave priority over the application payload_ fields.",
                    "type": "string"
                },
                "serviceProfileID": {
                    "description": "ID of the service profile.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiApplicationListItem": {
            "properties": {
                "description": {
                    "description": "Description of the application.",
                    "type": "string"
                },
                "id": {
                    "description": "Application ID.",
                    "format": "int64",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the application.",
                    "type": "string"
                },
                "organizationID": {
                    "description": "ID of the organization to which the application belongs.",
                    "format": "int64",
                    "type": "string"
                },
                "serviceProfileID": {
                    "description": "ID of the service profile.",
                    "type": "string"
                },
                "serviceProfileName": {
                    "description": "Service-profile name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiAuthenticateWeChatUserRequest": {
            "properties": {
                "code": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiAuthenticateWeChatUserResponse": {
            "properties": {
                "bindingIsRequired": {
                    "type": "boolean"
                },
                "jwt": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiBTCAddLocksRequest": {
            "properties": {
                "durationDays": {
                    "description": "duration for which amount will be locked (it has to match session parameters)",
                    "format": "int64",
                    "type": "string"
                },
                "gatewayMac": {
                    "description": "MACs of the gateways that will participate",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "orgId": {
                    "description": "org that locks the mxc and owns the gateways",
                    "format": "int64",
                    "type": "string"
                },
                "sessionId": {
                    "description": "btc mining session for which the locks will be active",
                    "format": "int64",
                    "type": "string"
                },
                "totalAmount": {
                    "description": "total amount to be locked (it has to match session parameters)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiBTCAddLocksResponse": {
            "type": "object"
        },
        "extapiBTCListLocksResponse": {
            "properties": {
                "lock": {
                    "description": "list of open locks",
                    "items": {
                        "$ref": "#/definitions/extapiBTCLock"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiBTCLock": {
            "properties": {
                "amount": {
                    "description": "amount of MXC locked",
                    "type": "string"
                },
                "btcRevenue": {
                    "description": "BTC revenue earned by this lock",
                    "type": "string"
                },
                "created": {
                    "description": "timestamp when lock was created",
                    "format": "date-time",
                    "type": "string"
                },
                "gatewayMac": {
                    "description": "MAC of the gateway associated with the lock",
                    "type": "string"
                },
                "id": {
                    "description": "lock id in database",
                    "format": "int64",
                    "type": "string"
                },
                "lockTill": {
                    "description": "timestamp after which the lock will be released",
                    "format": "date-time",
                    "type": "string"
                },
                "sessionId": {
                    "description": "btc mining session id",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiBTCMiningSessionResponse": {
            "properties": {
                "endDate": {
                    "description": "last day of the mining session",
                    "format": "date-time",
                    "type": "string"
                },
                "mxcLockAmount": {
                    "description": "amount of MXC per gateway that the user must lock",
                    "format": "int64",
                    "type": "string"
                },
                "mxcLockDurationDays": {
                    "description": "number of days for which the MXC has to be locked",
                    "format": "int64",
                    "type": "string"
                },
                "sessionId": {
                    "description": "mining session id",
                    "format": "int64",
                    "type": "string"
                },
                "startDate": {
                    "description": "first day of the mining session",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiBatchResetDefaultGatewatConfigRequest": {
            "properties": {
                "organizationList": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiBatchResetDefaultGatewatConfigResponse": {
            "properties": {
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiBindExternalUserRequest": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiBindExternalUserResponse": {
            "properties": {
                "jwt": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiBoost": {
            "description": "information about boost for locking the stake",
            "properties": {
                "boost": {
                    "description": "what boost will apply to this stake [0, 1]",
                    "type": "string"
                },
                "lockPeriods": {
                    "description": "for how many periods (normally months) stake will be locked",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiBrandingResponse": {
            "properties": {
                "footer": {
                    "description": "Footer html.",
                    "type": "string"
                },
                "logo": {
                    "description": "Logo html.",
                    "type": "string"
                },
                "logoPath": {
                    "description": "Logo img path",
                    "type": "string"
                },
                "registration": {
                    "description": "Registration html.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCell": {
            "description": "Cell contains info about the cell",
            "properties": {
                "gateways": {
                    "description": "Number of gateways in the cell",
                    "format": "uint64",
                    "type": "string"
                },
                "h3CellId": {
                    "description": "H3 cell ID",
                    "format": "uint64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCheckACLRequest": {
            "properties": {
                "acc": {
                    "format": "int32",
                    "type": "integer"
                },
                "clientid": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCheckACLResponse": {
            "type": "object"
        },
        "extapiConfirmBindingEmailRequest": {
            "properties": {
                "organizationId": {
                    "format": "int64",
                    "type": "string"
                },
                "token": {
                    "description": "token sent to user in VerifyEmail",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiConfirmBindingEmailResponse": {
            "type": "object"
        },
        "extapiConfirmPasswordResetReq": {
            "properties": {
                "newPassword": {
                    "description": "new password",
                    "type": "string"
                },
                "otp": {
                    "description": "OTP code from password reset email",
                    "type": "string"
                },
                "username": {
                    "description": "username to reset password for",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiConfirmRegistrationRequest": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiConfirmRegistrationResponse": {
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "jwt": {
                    "type": "string"
                },
                "sessionTTL": {
                    "format": "int32",
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCouncil": {
            "description": "Information about the council",
            "properties": {
                "chairOrgId": {
                    "description": "ID of the organization that chaires the council",
                    "format": "int64",
                    "type": "string"
                },
                "id": {
                    "description": "numerical council ID",
                    "format": "int64",
                    "type": "string"
                },
                "lastDhxRevenue": {
                    "description": "councils DHX revenue when it was paid last time",
                    "type": "string"
                },
                "lastMpower": {
                    "description": "councils mpower when it was paid last time",
                    "type": "string"
                },
                "lastPaidDate": {
                    "description": "the date when council was last paid revenues",
                    "format": "date-time",
                    "type": "string"
                },
                "name": {
                    "description": "name of the council unique on this supernode",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCreateApplicationRequest": {
            "properties": {
                "application": {
                    "$ref": "#/definitions/extapiApplication",
                    "description": "Application object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateApplicationResponse": {
            "properties": {
                "id": {
                    "description": "Application ID.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCreateDeviceKeysRequest": {
            "properties": {
                "deviceKeys": {
                    "$ref": "#/definitions/extapiDeviceKeys",
                    "description": "Device-keys object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateDeviceProfileRequest": {
            "properties": {
                "deviceProfile": {
                    "$ref": "#/definitions/extapiDeviceProfile",
                    "description": "Device-profile object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateDeviceProfileResponse": {
            "properties": {
                "id": {
                    "description": "Device-profile ID (UUID string).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCreateDeviceRequest": {
            "properties": {
                "device": {
                    "$ref": "#/definitions/extapiDevice",
                    "description": "Device object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateFUOTADeploymentForDeviceRequest": {
            "properties": {
                "devEUI": {
                    "description": "Device EUI (HEX encoded).",
                    "type": "string"
                },
                "fuotaDeployment": {
                    "$ref": "#/definitions/extapiFUOTADeployment",
                    "description": "FUOTA deployment."
                }
            },
            "type": "object"
        },
        "extapiCreateFUOTADeploymentForDeviceResponse": {
            "properties": {
                "id": {
                    "description": "ID of the created deployment (string formatted UUID).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCreateGatewayProfileRequest": {
            "properties": {
                "gatewayProfile": {
                    "$ref": "#/definitions/extapiGatewayProfile",
                    "description": "Gateway-profile object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateGatewayProfileResponse": {
            "properties": {
                "id": {
                    "description": "Gateway-profile ID (UUID string).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCreateGatewayRequest": {
            "properties": {
                "gateway": {
                    "$ref": "#/definitions/extapiGateway",
                    "description": "Gateway object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateHTTPIntegrationRequest": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiHTTPIntegration",
                    "description": "Integration object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateInfluxDBIntegrationRequest": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiInfluxDBIntegration",
                    "description": "Integration object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateLoRaCloudIntegrationRequest": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiLoRaCloudIntegration",
                    "description": "Integration object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateMulticastGroupRequest": {
            "properties": {
                "multicastGroup": {
                    "$ref": "#/definitions/extapiMulticastGroup",
                    "description": "Multicast-group object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateMulticastGroupResponse": {
            "properties": {
                "id": {
                    "description": "ID of created group (string formatted UUID).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCreateMyDevicesIntegrationRequest": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiMyDevicesIntegration",
                    "description": "Integration object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateNetworkServerRequest": {
            "properties": {
                "networkServer": {
                    "$ref": "#/definitions/extapiNetworkServer",
                    "description": "Network-server object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateNetworkServerResponse": {
            "properties": {
                "id": {
                    "description": "Network-server ID.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCreateOrganizationRequest": {
            "properties": {
                "organization": {
                    "$ref": "#/definitions/extapiOrganization",
                    "description": "Organization object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateOrganizationResponse": {
            "properties": {
                "id": {
                    "description": "Organization ID.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCreateRequest": {
            "properties": {
                "applicationId": {
                    "description": "ID of the application to which the device must be added.\nIt is possible to move a device to a different application on update,\ngiven that both the old and the new application share the same\nservice-profile.",
                    "format": "int64",
                    "type": "string"
                },
                "organizationId": {
                    "format": "int64",
                    "type": "string"
                },
                "provisionId": {
                    "description": "provision id, scan result from the tag provided by manufacturer",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCreateResponse": {
            "properties": {
                "devEui": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCreateServiceProfileRequest": {
            "properties": {
                "serviceProfile": {
                    "$ref": "#/definitions/extapiServiceProfile",
                    "description": "Service-profile object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateServiceProfileResponse": {
            "properties": {
                "id": {
                    "description": "Service-profile ID (UUID string).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiCreateThingsBoardIntegrationRequest": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiThingsBoardIntegration",
                    "description": "Integration object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateUserRequest": {
            "properties": {
                "organizations": {
                    "description": "Add the user to the following organizations.",
                    "items": {
                        "$ref": "#/definitions/extapiUserOrganization"
                    },
                    "type": "array"
                },
                "password": {
                    "description": "Password of the user.",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/extapiUser",
                    "description": "User object to create."
                }
            },
            "type": "object"
        },
        "extapiCreateUserResponse": {
            "properties": {
                "id": {
                    "description": "User ID.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDFIAuthenticateUserResponse": {
            "properties": {
                "mxcBalance": {
                    "description": "current mxc balance in user's dd wallet/supernode wallet",
                    "type": "string"
                },
                "organizationID": {
                    "type": "string"
                },
                "userEmail": {
                    "description": "for displaying",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXBondInfoRequest": {
            "properties": {
                "orgId": {
                    "description": "organization for which the info should be returned",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXBondInfoResponse": {
            "properties": {
                "dhxBonded": {
                    "description": "the amount of DHX bonded",
                    "type": "string"
                },
                "dhxCoolingOff": {
                    "description": "detailed info about amounts in cooling off state",
                    "items": {
                        "$ref": "#/definitions/extapiDHXCoolingOff"
                    },
                    "type": "array"
                },
                "dhxCoolingOffTotal": {
                    "description": "the total amount that is cooling off",
                    "type": "string"
                },
                "dhxUnbonding": {
                    "description": "detailed info about unbonding amounts",
                    "items": {
                        "$ref": "#/definitions/extapiDHXUnbonding"
                    },
                    "type": "array"
                },
                "dhxUnbondingTotal": {
                    "description": "the total amount in unbonding state",
                    "type": "string"
                },
                "orgId": {
                    "description": "organization for which the info is returned",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXBondRequest": {
            "properties": {
                "amount": {
                    "description": "amount of DHX that should be bonded",
                    "type": "string"
                },
                "orgId": {
                    "description": "organization that wants to bond DHX",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXBondResponse": {
            "type": "object"
        },
        "extapiDHXCoolingOff": {
            "description": "info about DHX cooling off",
            "properties": {
                "amount": {
                    "description": "amount that is cooling off",
                    "type": "string"
                },
                "created": {
                    "description": "the date when cooling off has started",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXCreateCouncilRequest": {
            "properties": {
                "amount": {
                    "description": "amount that shall be staked then the council is created",
                    "type": "string"
                },
                "boost": {
                    "description": "the boost that user expects",
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "lockMonths": {
                    "description": "for how many months the stake should be locked",
                    "format": "int64",
                    "type": "string"
                },
                "name": {
                    "description": "the name of the council",
                    "type": "string"
                },
                "organizationId": {
                    "description": "organization that will chair the council",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXCreateCouncilResponse": {
            "properties": {
                "councilId": {
                    "description": "id of the council create request in the table",
                    "format": "int64",
                    "type": "string"
                },
                "stakeId": {
                    "description": "id of the stake that was created while creating the council",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXCreateStakeRequest": {
            "properties": {
                "amount": {
                    "type": "string"
                },
                "boost": {
                    "description": "the boost that user expects",
                    "type": "string"
                },
                "councilId": {
                    "description": "in which council to create the lockdrop",
                    "format": "int64",
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "lockMonths": {
                    "description": "for how many months the stake should be locked",
                    "format": "int64",
                    "type": "string"
                },
                "organizationId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXCreateStakeResponse": {
            "properties": {
                "stakeId": {
                    "description": "ID of the created stake",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXEstimateMiningResponse": {
            "properties": {
                "dhxBondRecommended": {
                    "description": "the amount of DHX that the organization needs to have bonded to be able\nto claim the estimated DHX revenue",
                    "type": "string"
                },
                "dhxBonded": {
                    "description": "the amount of DHX that the organization currently has bonded",
                    "type": "string"
                },
                "dhxMiningLimit": {
                    "description": "current maximum amount of DHX that the organization can mine per day\nbased on the bonded amount of DHX",
                    "type": "string"
                },
                "estimatedDhxRevenue": {
                    "description": "estimated DHX revenue, assuming that organization will have the\nestimated mining power, won't hit the dhx mining limit, and that DHX\nrevenue per unit of mining power will be the same as during the last\nmining",
                    "type": "string"
                },
                "estimatedMiningPower": {
                    "description": "estimated mining power based on lockdrop and the number of gateways.\nAssumes that the gateways are 100% uptime.",
                    "type": "string"
                },
                "gateways": {
                    "description": "number of gateways that organization has",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXGetLastMiningResponse": {
            "properties": {
                "councilDhxAmount": {
                    "type": "string"
                },
                "councilId": {
                    "description": "council id, name, mining power and revenue (if the org chairs one)",
                    "format": "int64",
                    "type": "string"
                },
                "councilMiningPower": {
                    "type": "string"
                },
                "councilName": {
                    "type": "string"
                },
                "date": {
                    "description": "the last date for which mining has been paid",
                    "format": "date-time",
                    "type": "string"
                },
                "dhxAllocated": {
                    "description": "the amount of DHX that supernode could distribute between users based on mpower",
                    "type": "string"
                },
                "dhxAmount": {
                    "description": "the amount of DHX that supernode actually distributed",
                    "type": "string"
                },
                "globalMiningPower": {
                    "description": "combined mining power of all supernodes",
                    "type": "string"
                },
                "miningPower": {
                    "description": "the calculated mining power of the supernode for this day",
                    "type": "string"
                },
                "orgDhxAmount": {
                    "type": "string"
                },
                "orgDhxLimit": {
                    "type": "string"
                },
                "orgId": {
                    "description": "organization id, mining power, mining limit and revenue (if requested)",
                    "format": "int64",
                    "type": "string"
                },
                "orgMiningPower": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXListCouncilsResponse": {
            "properties": {
                "council": {
                    "items": {
                        "$ref": "#/definitions/extapiCouncil"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiDHXListStakesResponse": {
            "properties": {
                "stake": {
                    "items": {
                        "$ref": "#/definitions/extapiDHXStake"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiDHXMining": {
            "properties": {
                "miningDate": {
                    "description": "mining date",
                    "format": "date-time",
                    "type": "string"
                },
                "orgDhxBonded": {
                    "description": "amount of DHX the org had bonded on the date",
                    "type": "string"
                },
                "orgDhxMined": {
                    "description": "amount of DHX that was mined by the org on the date",
                    "type": "string"
                },
                "orgId": {
                    "description": "organization ID",
                    "format": "int64",
                    "type": "string"
                },
                "orgMiningPower": {
                    "description": "mining power of the organization on the given date",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXMiningHistoryResponse": {
            "properties": {
                "dhxMining": {
                    "description": "DHX mining daily records for the requested period",
                    "items": {
                        "$ref": "#/definitions/extapiDHXMining"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiDHXStake": {
            "properties": {
                "amount": {
                    "type": "string"
                },
                "boost": {
                    "type": "string"
                },
                "closed": {
                    "type": "boolean"
                },
                "councilId": {
                    "format": "int64",
                    "type": "string"
                },
                "councilName": {
                    "type": "string"
                },
                "created": {
                    "format": "date-time",
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "dhxMined": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "string"
                },
                "lockTill": {
                    "format": "date-time",
                    "type": "string"
                },
                "organizationId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXUnbondRequest": {
            "properties": {
                "amount": {
                    "description": "amount of DHX that should be unbonded",
                    "type": "string"
                },
                "orgId": {
                    "description": "organization that wants to unbond DHX",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDHXUnbondResponse": {
            "type": "object"
        },
        "extapiDHXUnbonding": {
            "description": "info about DHX unbonding",
            "properties": {
                "amount": {
                    "description": "amount that is unbonding",
                    "type": "string"
                },
                "created": {
                    "description": "the date when unbonding has started",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDSDeviceProfile": {
            "properties": {
                "applicationId": {
                    "format": "int64",
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "devEui": {
                    "type": "string"
                },
                "fkWallet": {
                    "format": "int64",
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "string"
                },
                "lastSeenAt": {
                    "type": "string"
                },
                "mode": {
                    "$ref": "#/definitions/extapiDeviceMode"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDevice": {
            "properties": {
                "applicationID": {
                    "description": "ID of the application to which the device must be added.\nIt is possible to move a device to a different application on update,\ngiven that both the old and the new application share the same\nservice-profile.",
                    "format": "int64",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the device.",
                    "type": "string"
                },
                "devEUI": {
                    "description": "Device EUI (HEX encoded).",
                    "type": "string"
                },
                "deviceProfileID": {
                    "description": "DeviceProfileID attached to the device.",
                    "type": "string"
                },
                "isDisabled": {
                    "description": "Device is disabled.",
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the device (if left blank, it will be set to the DevEUI).",
                    "type": "string"
                },
                "referenceAltitude": {
                    "description": "Reference altitude.\nWhen using geolocation, this altitude will be used as a reference\n(when supported by the geolocation-server) to increase geolocation\naccuracy.",
                    "format": "double",
                    "type": "number"
                },
                "skipFCntCheck": {
                    "description": "Skip frame-counter checks (this is insecure, but could be helpful for debugging).",
                    "type": "boolean"
                },
                "tags": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags (user defined).\nThese tags are exposed in the event payloads or to integration. Tags are\nintended for aggregation and filtering.",
                    "type": "object"
                },
                "variables": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Variables (user defined).\nThese variables can be used together with integrations to store tokens /\nsecrets that must be configured per device. These variables are not\nexposed in the event payloads.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "extapiDeviceActivation": {
            "properties": {
                "aFCntDown": {
                    "description": "Downlink application frame-counter.",
                    "format": "int64",
                    "type": "integer"
                },
                "appSKey": {
                    "description": "Application session key (HEX encoded).",
                    "type": "string"
                },
                "devAddr": {
                    "description": "Device address (HEX encoded).",
                    "type": "string"
                },
                "devEUI": {
                    "description": "Device EUI (HEX encoded).",
                    "type": "string"
                },
                "fCntUp": {
                    "description": "Uplink frame-counter.",
                    "format": "int64",
                    "type": "integer"
                },
                "fNwkSIntKey": {
                    "description": "Forwarding network session integrity key (HEX encoded).",
                    "type": "string"
                },
                "nFCntDown": {
                    "description": "Downlink network frame-counter.",
                    "format": "int64",
                    "type": "integer"
                },
                "nwkSEncKey": {
                    "description": "Network session encryption key (HEX encoded).",
                    "type": "string"
                },
                "sNwkSIntKey": {
                    "description": "Serving network session integrity key (HEX encoded).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDeviceKeys": {
            "properties": {
                "appKey": {
                    "description": "Application root key (HEX encoded).\nNote: This field only needs to be set for LoRaWAN 1.1.x devices!",
                    "type": "string"
                },
                "devEUI": {
                    "description": "Device EUI (HEX encoded).",
                    "type": "string"
                },
                "genAppKey": {
                    "description": "Gen application key (HEX encoded).\nThis is an optional key that only must be set for LORaWAN 1.0.x devices\nthat implement the remote multicast setup specification.",
                    "type": "string"
                },
                "nwkKey": {
                    "description": "Network root key (HEX encoded).\nNote: For LoRaWAN 1.0.x, use this field for the LoRaWAN 1.0.x 'AppKey`!",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDeviceListItem": {
            "properties": {
                "applicationID": {
                    "description": "Application ID.",
                    "format": "int64",
                    "type": "string"
                },
                "description": {
                    "description": "Description of the device.",
                    "type": "string"
                },
                "devEUI": {
                    "description": "Device EUI (HEX encoded).",
                    "type": "string"
                },
                "deviceProfileID": {
                    "description": "Device-profile ID attached to the device.",
                    "type": "string"
                },
                "deviceProfileName": {
                    "description": "Device-profile name.",
                    "type": "string"
                },
                "deviceStatusBattery": {
                    "description": "The device battery status (deprecated, use device_status_battery_level).\n0:      The end-device is connected to an external power source\n1..254: The battery level, 1 being at minimum and 254 being at maximum\n255:    The end-device was not able to measure the battery level\n256:    The device-status is not available.",
                    "format": "int64",
                    "type": "integer"
                },
                "deviceStatusBatteryLevel": {
                    "description": "Device battery level as a percentage.",
                    "format": "float",
                    "type": "number"
                },
                "deviceStatusBatteryLevelUnavailable": {
                    "description": "Device battery status is unavailable.",
                    "type": "boolean"
                },
                "deviceStatusExternalPowerSource": {
                    "description": "Device is connected to an external power source.",
                    "type": "boolean"
                },
                "deviceStatusMargin": {
                    "description": "The device margin status\n-32..32: The demodulation SNR ration in dB\n256:     The device-status is not available.",
                    "format": "int32",
                    "type": "integer"
                },
                "lastSeenAt": {
                    "description": "The last time the application-server received any data from the device,\nor an empty string when the device never sent any data.",
                    "format": "date-time",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the device.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDeviceMode": {
            "default": "DV_INACTIVE",
            "enum": [
                "DV_INACTIVE",
                "DV_FREE_GATEWAYS_LIMITED",
                "DV_WHOLE_NETWORK",
                "DV_DELETED"
            ],
            "type": "string"
        },
        "extapiDeviceProfile": {
            "properties": {
                "classBTimeout": {
                    "description": "Maximum delay for the End-Device to answer a MAC request or a confirmed DL frame (mandatory if class B mode supported).",
                    "format": "int64",
                    "type": "integer"
                },
                "classCTimeout": {
                    "description": "Maximum delay for the End-Device to answer a MAC request or a confirmed DL frame (mandatory if class C mode supported).",
                    "format": "int64",
                    "type": "integer"
                },
                "factoryPresetFreqs": {
                    "description": "List of factory-preset frequencies (mandatory for ABP).",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "geolocBufferTTL": {
                    "description": "Geolocation buffer TTL (in seconds).\nWhen > 0, uplink RX meta-data will be stored in a buffer so that\nthe meta-data of multiple uplinks can be used for geolocation.",
                    "format": "int64",
                    "type": "integer"
                },
                "geolocMinBufferSize": {
                    "description": "Geolocation minimum buffer size.\nWhen > 0, geolocation will only be performed when the buffer has\nat least the given size.",
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "description": "Device-profile ID (UUID string).",
                    "type": "string"
                },
                "macVersion": {
                    "description": "Version of the LoRaWAN supported by the End-Device.",
                    "type": "string"
                },
                "maxDutyCycle": {
                    "description": "Maximum duty cycle supported by the End-Device.",
                    "format": "int64",
                    "type": "integer"
                },
                "maxEIRP": {
                    "description": "Maximum EIRP supported by the End-Device.",
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "description": "Device-profile name.",
                    "type": "string"
                },
                "networkServerID": {
                    "description": "Network-server ID on which the service-profile is provisioned.",
                    "format": "int64",
                    "type": "string"
                },
                "organizationID": {
                    "description": "Organization ID to which the service-profile is assigned.",
                    "format": "int64",
                    "type": "string"
                },
                "payloadCodec": {
                    "description": "Payload codec.\nLeave blank to disable the codec feature.",
                    "type": "string"
                },
                "payloadDecoderScript": {
                    "description": "Payload decoder script.\nDepending the codec, it is possible to provide a script which implements\nthe decoder function.",
                    "type": "string"
                },
                "payloadEncoderScript": {
                    "description": "Payload encoder script.\nDepending the codec, it is possible to provide a script which implements\nthe encoder function.",
                    "type": "string"
                },
                "pingSlotDR": {
                    "description": "Mandatory if class B mode supported.",
                    "format": "int64",
                    "type": "integer"
                },
                "pingSlotFreq": {
                    "description": "Mandatory if class B mode supported.",
                    "format": "int64",
                    "type": "integer"
                },
                "pingSlotPeriod": {
                    "description": "Mandatory if class B mode supported.",
                    "format": "int64",
                    "type": "integer"
                },
                "regParamsRevision": {
                    "description": "Revision of the Regional Parameters document supported by the End-Device.",
                    "type": "string"
                },
                "rfRegion": {
                    "description": "RF region name.",
                    "type": "string"
                },
                "rxDROffset1": {
                    "description": "RX1 data rate offset (mandatory for ABP).",
                    "format": "int64",
                    "type": "integer"
                },
                "rxDataRate2": {
                    "description": "RX2 data rate (mandatory for ABP).",
                    "format": "int64",
                    "type": "integer"
                },
                "rxDelay1": {
                    "description": "Class A RX1 delay (mandatory for ABP).",
                    "format": "int64",
                    "type": "integer"
                },
                "rxFreq2": {
                    "description": "RX2 channel frequency (mandatory for ABP).",
                    "format": "int64",
                    "type": "integer"
                },
                "supports32BitFCnt": {
                    "description": "End-Device uses 32bit FCnt (mandatory for LoRaWAN 1.0 End-Device).",
                    "type": "boolean"
                },
                "supportsClassB": {
                    "description": "End-Device supports Class B.",
                    "type": "boolean"
                },
                "supportsClassC": {
                    "description": "End-Device supports Class C.",
                    "type": "boolean"
                },
                "supportsJoin": {
                    "description": "End-Device supports Join (OTAA) or not (ABP).",
                    "type": "boolean"
                },
                "tags": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "User defined tags.",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "extapiDeviceProfileListItem": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "Device-profile ID (UUID string).",
                    "type": "string"
                },
                "name": {
                    "description": "Device-profile name.",
                    "type": "string"
                },
                "networkServerID": {
                    "description": "Network-server ID.",
                    "format": "int64",
                    "type": "string"
                },
                "organizationID": {
                    "description": "Organization ID.",
                    "format": "int64",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDeviceQueueItem": {
            "properties": {
                "confirmed": {
                    "description": "Set this to true when an acknowledgement from the device is required.\nPlease note that this must not be used to guarantee a delivery.",
                    "type": "boolean"
                },
                "data": {
                    "description": "Base64 encoded data.\nOr use the json_object field when an application codec has been configured.",
                    "format": "byte",
                    "type": "string"
                },
                "devEUI": {
                    "description": "Device EUI (HEX encoded).",
                    "type": "string"
                },
                "fCnt": {
                    "description": "Downlink frame-counter.\nThis will be automatically set on enquue.",
                    "format": "int64",
                    "type": "integer"
                },
                "fPort": {
                    "description": "FPort used (must be > 0)",
                    "format": "int64",
                    "type": "integer"
                },
                "jsonObject": {
                    "description": "JSON object (string).\nOnly use this when an application codec has been configured that can convert\nthis object into binary form.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiDownlinkFrameLog": {
            "properties": {
                "phyPayloadJSON": {
                    "description": "LoRaWAN PHYPayload.",
                    "type": "string"
                },
                "txInfo": {
                    "$ref": "#/definitions/gwDownlinkTXInfo",
                    "description": "TX information of the downlink."
                }
            },
            "type": "object"
        },
        "extapiEnqueueDeviceQueueItemRequest": {
            "properties": {
                "deviceQueueItem": {
                    "$ref": "#/definitions/extapiDeviceQueueItem",
                    "description": "Queue-item object to enqueue."
                }
            },
            "type": "object"
        },
        "extapiEnqueueDeviceQueueItemResponse": {
            "properties": {
                "fCnt": {
                    "description": "Frame-counter for the enqueued payload.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "extapiEnqueueMulticastQueueItemRequest": {
            "properties": {
                "multicastQueueItem": {
                    "$ref": "#/definitions/extapiMulticastQueueItem",
                    "description": "Multicast queue-item object to enqueue."
                }
            },
            "type": "object"
        },
        "extapiEnqueueMulticastQueueItemResponse": {
            "properties": {
                "fCnt": {
                    "description": "Frame-counter for the enqueued payload.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "extapiExternalUserAccount": {
            "properties": {
                "externalUserId": {
                    "type": "string"
                },
                "externalUsername": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiFUOTADeployment": {
            "properties": {
                "dr": {
                    "description": "Data-rate.",
                    "format": "int64",
                    "type": "integer"
                },
                "frequency": {
                    "description": "Frequency (Hz).",
                    "format": "int64",
                    "type": "integer"
                },
                "groupType": {
                    "$ref": "#/definitions/extapiMulticastGroupType",
                    "description": "Multicast type.\nCurrently only Class-C is supported!"
                },
                "id": {
                    "description": "ID of the deployment (string formatted UUID).\nThis value will be automatically assigned on create.",
                    "type": "string"
                },
                "multicastTimeout": {
                    "description": "Multicast time-out.\nPlease refer to the Remote Multicast Setup specification as this field\nhas a different meaning for Class-B and Class-C groups.",
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the deployment.",
                    "type": "string"
                },
                "nextStepAfter": {
                    "description": "Next step after.\nThis value will be automatically set on create.",
                    "format": "date-time",
                    "type": "string"
                },
                "payload": {
                    "description": "Payload.",
                    "format": "byte",
                    "type": "string"
                },
                "redundancy": {
                    "description": "Redundancy (number of packages).",
                    "format": "int64",
                    "type": "integer"
                },
                "state": {
                    "description": "Deployment state.\nThis value will be automatically set on create.",
                    "type": "string"
                },
                "unicastTimeout": {
                    "description": "Unicast time-out.\nSet this to the value in which you at least expect an uplink frame from the\ndevice. The FUOTA deployment engine will wait at least for the given time\nbefore proceeding with the next steps.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiFUOTADeploymentDeviceListItem": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "devEUI": {
                    "description": "Device EUI (HEX encoded).",
                    "type": "string"
                },
                "deviceName": {
                    "description": "Device name.",
                    "type": "string"
                },
                "errorMessage": {
                    "description": "Error message (in case of error state).",
                    "type": "string"
                },
                "state": {
                    "$ref": "#/definitions/extapiFUOTADeploymentDeviceState",
                    "description": "Device state."
                },
                "updatedAt": {
                    "description": "Updated at timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiFUOTADeploymentDeviceState": {
            "default": "PENDING",
            "description": " - PENDING: Pending.\n - SUCCESS: Success.\n - ERROR: Error.",
            "enum": [
                "PENDING",
                "SUCCESS",
                "ERROR"
            ],
            "type": "string"
        },
        "extapiFUOTADeploymentListItem": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the deployment (string formatted UUID).",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the deployment.",
                    "type": "string"
                },
                "nextStepAfter": {
                    "description": "Next step after.",
                    "format": "date-time",
                    "type": "string"
                },
                "state": {
                    "description": "Deployment state.",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiFiatCurrency": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiFinishRegistrationRequest": {
            "properties": {
                "organizationDisplayName": {
                    "type": "string"
                },
                "organizationName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "userId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGSGatewayProfile": {
            "properties": {
                "createAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fkGwNs": {
                    "format": "int64",
                    "type": "string"
                },
                "fkWallet": {
                    "format": "int64",
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "string"
                },
                "lastSeenAt": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                },
                "mode": {
                    "$ref": "#/definitions/extapiGatewayMode"
                },
                "name": {
                    "type": "string"
                },
                "orgId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGateway": {
            "properties": {
                "boards": {
                    "description": "Gateway boards configuration (optional).\nThis is (currently) only needed when the gateway supports the fine-timestamp\nand you you would like to add the FPGA ID to the gateway meta-data or would\nlike LPWAN Server to decrypt the fine-timestamp.",
                    "items": {
                        "$ref": "#/definitions/extapiGatewayBoard"
                    },
                    "type": "array"
                },
                "description": {
                    "description": "Gateway description.",
                    "type": "string"
                },
                "discoveryEnabled": {
                    "description": "Set to true to enable gateway discovery.",
                    "type": "boolean"
                },
                "gatewayProfileID": {
                    "description": "Gateway-profile ID (UUID string, optional).",
                    "type": "string"
                },
                "id": {
                    "description": "Gateway ID (HEX encoded).",
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/commonLocation",
                    "description": "Gateway location."
                },
                "metadata": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata (provided by the gateway).",
                    "type": "object"
                },
                "name": {
                    "description": "Gateway name.",
                    "type": "string"
                },
                "networkServerID": {
                    "description": "Network-server ID on which the gateway is provisioned.",
                    "format": "int64",
                    "type": "string"
                },
                "organizationID": {
                    "description": "Organization ID to which the gateway belongs.\nThis can't be changed after creating the gateway.",
                    "format": "int64",
                    "type": "string"
                },
                "tags": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags (user defined).",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "extapiGatewayBoard": {
            "properties": {
                "fineTimestampKey": {
                    "description": "Fine-timestamp AES decryption key (HEX encoded) (optional).",
                    "type": "string"
                },
                "fpgaID": {
                    "description": "FPGA ID of the gateway (HEX encoded) (optional).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGatewayListItem": {
            "properties": {
                "createdAt": {
                    "description": "Create timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "description": {
                    "description": "A description for the gateway",
                    "type": "string"
                },
                "firstSeenAt": {
                    "description": "First seen timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "Gateway ID (HEX encoded).",
                    "type": "string"
                },
                "lastSeenAt": {
                    "description": "Last seen timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/commonLocation",
                    "description": "Location."
                },
                "name": {
                    "description": "A name for the gateway",
                    "type": "string"
                },
                "networkServerID": {
                    "description": "Network-server ID.",
                    "format": "int64",
                    "type": "string"
                },
                "organizationID": {
                    "description": "Organization ID.",
                    "format": "int64",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGatewayLocation": {
            "properties": {
                "altitude": {
                    "description": "Altitude of the gateway in meters.",
                    "format": "double",
                    "type": "number"
                },
                "latitude": {
                    "description": "Latitude of the gateway -90.0 to 90.0.",
                    "format": "double",
                    "type": "number"
                },
                "longitude": {
                    "description": "Longitude of the gateway -180.0 to 180.0.",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "extapiGatewayLocationListItem": {
            "properties": {
                "location": {
                    "$ref": "#/definitions/extapiGatewayLocation",
                    "description": "Location."
                }
            },
            "type": "object"
        },
        "extapiGatewayMiningFuelChange": {
            "description": "information about the gateway mining fuel",
            "properties": {
                "amount": {
                    "description": "amount that is to be added or withdrawn",
                    "type": "string"
                },
                "gatewayMac": {
                    "description": "mac address of the gateway as a sequence of hex digits without any\nseparators, for example 70b3d5fffeabcdef",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGatewayMiningHealth": {
            "properties": {
                "ageSeconds": {
                    "description": "gateway's age, total online seconds",
                    "format": "int64",
                    "type": "string"
                },
                "health": {
                    "description": "overall health score",
                    "format": "float",
                    "type": "number"
                },
                "id": {
                    "description": "MAC of the gateway, called \"id\" for consistency with /api/gateways call",
                    "type": "string"
                },
                "miningFuel": {
                    "description": "mining fuel bonded to the gw by the org",
                    "type": "string"
                },
                "miningFuelHealth": {
                    "description": "mining fuel health score",
                    "format": "float",
                    "type": "number"
                },
                "miningFuelMax": {
                    "description": "mining fuel required for full mining efficiency",
                    "type": "string"
                },
                "orgId": {
                    "description": "organization that owns the gateway",
                    "format": "int64",
                    "type": "string"
                },
                "totalMined": {
                    "description": "gateway's total mining",
                    "type": "string"
                },
                "uptimeHealth": {
                    "description": "uptime percentage in the last 7 calendar days",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "extapiGatewayMode": {
            "default": "GW_INACTIVE",
            "enum": [
                "GW_INACTIVE",
                "GW_FREE_GATEWAYS_LIMITED",
                "GW_WHOLE_NETWORK",
                "GW_DELETED"
            ],
            "type": "string"
        },
        "extapiGatewayProfile": {
            "properties": {
                "channels": {
                    "description": "Default channels (channels specified by the LoRaWAN Regional Parameters\nspecification) enabled for this configuration.",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                },
                "extraChannels": {
                    "description": "Extra channels added to the channel-configuration (in case the LoRaWAN\nregion supports adding custom channels).",
                    "items": {
                        "$ref": "#/definitions/extapiGatewayProfileExtraChannel"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "Gateway-profile ID (UUID string).",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the gateway-profile.",
                    "type": "string"
                },
                "networkServerID": {
                    "description": "Network-server ID of the gateway-profile.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGatewayProfileExtraChannel": {
            "properties": {
                "bandwidth": {
                    "description": "Bandwidth.",
                    "format": "int64",
                    "type": "integer"
                },
                "bitrate": {
                    "description": "Bitrate (in case of FSK modulation).",
                    "format": "int64",
                    "type": "integer"
                },
                "frequency": {
                    "description": "Frequency.",
                    "format": "int64",
                    "type": "integer"
                },
                "modulation": {
                    "$ref": "#/definitions/commonModulation",
                    "description": "Modulation."
                },
                "spreadingFactors": {
                    "description": "Spreading factors (in case of LoRa modulation).",
                    "items": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGatewayProfileListItem": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "Gateway-profile ID (UUID string).",
                    "type": "string"
                },
                "name": {
                    "description": "Gateway-profile name,",
                    "type": "string"
                },
                "networkServerID": {
                    "description": "Network-server ID on which the gateway-profile is provisioned.",
                    "format": "int64",
                    "type": "string"
                },
                "networkServerName": {
                    "description": "Network-server name.",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGatewayStats": {
            "properties": {
                "rxPacketsReceived": {
                    "description": "Packets received by the gateway.",
                    "format": "int32",
                    "type": "integer"
                },
                "rxPacketsReceivedOK": {
                    "description": "Packets received by the gateway that passed the CRC check.",
                    "format": "int32",
                    "type": "integer"
                },
                "timestamp": {
                    "description": "Timestamp of the (aggregated) measurement.",
                    "format": "date-time",
                    "type": "string"
                },
                "txPacketsEmitted": {
                    "description": "Packets transmitted by the gateway.",
                    "format": "int32",
                    "type": "integer"
                },
                "txPacketsReceived": {
                    "description": "Packets received by the gateway for transmission.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "extapiGetActiveStakesResponse": {
            "properties": {
                "actStake": {
                    "items": {
                        "$ref": "#/definitions/extapiStake"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGetApplicationResponse": {
            "properties": {
                "application": {
                    "$ref": "#/definitions/extapiApplication",
                    "description": "Application object."
                }
            },
            "type": "object"
        },
        "extapiGetAppserverVersionResponse": {
            "properties": {
                "version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetDSDeviceProfileResponse": {
            "properties": {
                "devProfile": {
                    "$ref": "#/definitions/extapiDSDeviceProfile"
                }
            },
            "type": "object"
        },
        "extapiGetDefaultGatewayConfigResponse": {
            "properties": {
                "defaultConfig": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetDeviceActivationResponse": {
            "properties": {
                "deviceActivation": {
                    "$ref": "#/definitions/extapiDeviceActivation",
                    "description": "Device-activation object."
                }
            },
            "type": "object"
        },
        "extapiGetDeviceHistoryResponse": {
            "properties": {
                "devHistory": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetDeviceKeysResponse": {
            "properties": {
                "deviceKeys": {
                    "$ref": "#/definitions/extapiDeviceKeys",
                    "description": "Device-key object."
                }
            },
            "type": "object"
        },
        "extapiGetDeviceListResponse": {
            "properties": {
                "count": {
                    "format": "int64",
                    "type": "string"
                },
                "devProfile": {
                    "items": {
                        "$ref": "#/definitions/extapiDSDeviceProfile"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGetDeviceProfileResponse": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "deviceProfile": {
                    "$ref": "#/definitions/extapiDeviceProfile",
                    "description": "Device-profile object."
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetDeviceResponse": {
            "properties": {
                "device": {
                    "$ref": "#/definitions/extapiDevice",
                    "description": "Device object."
                },
                "deviceStatusBattery": {
                    "description": "The device battery status\n0:      The end-device is connected to an external power source\n1..254: The battery level, 1 being at minimum and 254 being at maximum\n255:    The end-device was not able to measure the battery level\n256:    The device-status is not available.",
                    "format": "int64",
                    "type": "integer"
                },
                "deviceStatusMargin": {
                    "description": "The device margin status\n-32..32: The demodulation SNR ration in dB\n256:     The device-status is not available.",
                    "format": "int32",
                    "type": "integer"
                },
                "lastSeenAt": {
                    "description": "Last seen timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/commonLocation",
                    "description": "Device location.\nThis will set when the network-server was able to resolve the location\nusing the geolocation-server."
                }
            },
            "type": "object"
        },
        "extapiGetDownLinkPriceResponse": {
            "properties": {
                "downLinkPrice": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "extapiGetFUOTADeploymentDeviceResponse": {
            "properties": {
                "deploymentDevice": {
                    "$ref": "#/definitions/extapiFUOTADeploymentDeviceListItem"
                }
            },
            "type": "object"
        },
        "extapiGetFUOTADeploymentResponse": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "fuotaDeployment": {
                    "$ref": "#/definitions/extapiFUOTADeployment"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetFiatCurrencyListResponse": {
            "properties": {
                "fiatCurrencyList": {
                    "items": {
                        "$ref": "#/definitions/extapiFiatCurrency"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGetGSGatewayProfileResponse": {
            "properties": {
                "gwProfile": {
                    "$ref": "#/definitions/extapiGSGatewayProfile"
                }
            },
            "type": "object"
        },
        "extapiGetGatewayHistoryResponse": {
            "properties": {
                "gwHistory": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetGatewayListResponse": {
            "properties": {
                "count": {
                    "format": "int64",
                    "type": "string"
                },
                "gwProfile": {
                    "items": {
                        "$ref": "#/definitions/extapiGSGatewayProfile"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGetGatewayMiningHealthResponse": {
            "properties": {
                "gatewayHealth": {
                    "description": "list of health records for every gateway that was requested",
                    "items": {
                        "$ref": "#/definitions/extapiGatewayMiningHealth"
                    },
                    "type": "array"
                },
                "miningHealthAverage": {
                    "$ref": "#/definitions/extapiMiningHealthAverage",
                    "description": "\"average\" health numbers for the gateways in response"
                }
            },
            "type": "object"
        },
        "extapiGetGatewayMiningIncomeResponse": {
            "properties": {
                "dailyStats": {
                    "description": "daily mining stats for each day the mining happened",
                    "items": {
                        "$ref": "#/definitions/extapiMiningStats"
                    },
                    "type": "array"
                },
                "total": {
                    "description": "total amount mined by gateway during the requested period",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetGatewayProfileResponse": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "gatewayProfile": {
                    "$ref": "#/definitions/extapiGatewayProfile",
                    "description": "Gateway-profile object."
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetGatewayResponse": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "firstSeenAt": {
                    "description": "First seen at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "gateway": {
                    "$ref": "#/definitions/extapiGateway",
                    "description": "Gateway object."
                },
                "lastSeenAt": {
                    "description": "Last seen at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetGatewayStatsResponse": {
            "properties": {
                "result": {
                    "items": {
                        "$ref": "#/definitions/extapiGatewayStats"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGetGwConfigResponse": {
            "properties": {
                "conf": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetGwPwdResponse": {
            "properties": {
                "password": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetHTTPIntegrationResponse": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiHTTPIntegration",
                    "description": "Integration object."
                }
            },
            "type": "object"
        },
        "extapiGetInfluxDBIntegrationResponse": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiInfluxDBIntegration",
                    "description": "Integration object."
                }
            },
            "type": "object"
        },
        "extapiGetJWTRequest": {
            "properties": {
                "organizationId": {
                    "format": "int64",
                    "type": "string"
                },
                "ttlInSeconds": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetJWTResponse": {
            "properties": {
                "jwtMqttAuth": {
                    "description": "jwt generated and used for authenticate mosquitto client",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetLastPingResponse": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "dr": {
                    "description": "Data-rate.",
                    "format": "int64",
                    "type": "integer"
                },
                "frequency": {
                    "description": "Frequency (Hz).",
                    "format": "int64",
                    "type": "integer"
                },
                "pingRX": {
                    "description": "Gateways and meta-data of reception.",
                    "items": {
                        "$ref": "#/definitions/extapiPingRX"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGetLoRaCloudIntegrationResponse": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiLoRaCloudIntegration",
                    "description": "Integration object."
                }
            },
            "type": "object"
        },
        "extapiGetMXCpriceResponse": {
            "properties": {
                "mxcPrice": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetMiningInfoResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/extapiMiningData"
                    },
                    "type": "array"
                },
                "todayRev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetMulticastGroupResponse": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "multicastGroup": {
                    "$ref": "#/definitions/extapiMulticastGroup",
                    "description": "Multicast-group object."
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetMxprotocolServerVersionResponse": {
            "properties": {
                "version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetMyDevicesIntegrationResponse": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiMyDevicesIntegration",
                    "description": "Integration object."
                }
            },
            "type": "object"
        },
        "extapiGetNetworkServerResponse": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "networkServer": {
                    "$ref": "#/definitions/extapiNetworkServer",
                    "description": "Network-server object."
                },
                "region": {
                    "description": "The LPWAN Server region configured.",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "version": {
                    "description": "The LPWAN Server version.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetNetworkUsageHistResponse": {
            "properties": {
                "count": {
                    "format": "int64",
                    "type": "string"
                },
                "networkUsage": {
                    "items": {
                        "$ref": "#/definitions/extapiNetworkUsage"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGetOTPCodeResponse": {
            "properties": {
                "otpCode": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetOrdersByUserResponse": {
            "properties": {
                "orders": {
                    "items": {
                        "$ref": "#/definitions/extapiOrder"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGetOrganizationResponse": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "organization": {
                    "$ref": "#/definitions/extapiOrganization",
                    "description": "Organization object."
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetOrganizationUserResponse": {
            "description": "Response for a user in the organization",
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "organizationUser": {
                    "$ref": "#/definitions/extapiOrganizationUser",
                    "description": "Organization-user object."
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetRandomDevAddrResponse": {
            "properties": {
                "devAddr": {
                    "description": "Device address (HEX encoded).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetRecoveryCodesRequest": {
            "properties": {
                "regenerate": {
                    "description": "if true, then old recovery codes will be removed and new will be\ngenerated, otherwise the old codes will remain valid and will be returned",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "extapiGetRecoveryCodesResponse": {
            "properties": {
                "recoveryCode": {
                    "description": "list of recovery codes",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGetServerRegionResponse": {
            "properties": {
                "serverRegion": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetServiceProfileResponse": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "serviceProfile": {
                    "$ref": "#/definitions/extapiServiceProfile",
                    "description": "Service-profile object."
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetSettingsResponse": {
            "properties": {
                "compensation": {
                    "format": "double",
                    "type": "number"
                },
                "downlinkPrice": {
                    "format": "double",
                    "type": "number"
                },
                "lowBalanceWarning": {
                    "description": "when supernode income is lower than expected revenue, warn system owner to increase income",
                    "type": "string"
                },
                "stakingInterest": {
                    "description": "this is the monthly interest we pay on stakes",
                    "format": "double",
                    "type": "number"
                },
                "supernodeIncomeRatio": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "extapiGetTOTPConfigurationRequest": {
            "properties": {
                "qrCodeSize": {
                    "description": "the size of QR code image",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetTOTPConfigurationResponse": {
            "properties": {
                "qrCode": {
                    "description": "QR code base64 encoded in PNG format",
                    "type": "string"
                },
                "recoveryCode": {
                    "description": "list of recovery codes",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "secret": {
                    "description": "the secret encoded as a string of 32 characters",
                    "type": "string"
                },
                "url": {
                    "description": "otpauth:// url containing details of TOTP configuration",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetThingsBoardIntegrationResponse": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiThingsBoardIntegration",
                    "description": "Integration object."
                }
            },
            "type": "object"
        },
        "extapiGetTopUpDestinationResponse": {
            "properties": {
                "activeAccount": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetTopUpHistoryRequest": {
            "properties": {
                "currency": {
                    "type": "string"
                },
                "from": {
                    "format": "date-time",
                    "type": "string"
                },
                "orgId": {
                    "format": "int64",
                    "type": "string"
                },
                "till": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetTopUpHistoryResponse": {
            "properties": {
                "topupHistory": {
                    "items": {
                        "$ref": "#/definitions/extapiTopUpHistory"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGetTransactionHistoryResponse": {
            "properties": {
                "tx": {
                    "items": {
                        "$ref": "#/definitions/extapiTransaction"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGetUserEmailResponse": {
            "properties": {
                "status": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "extapiGetUserResponse": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/extapiUser",
                    "description": "User object."
                }
            },
            "type": "object"
        },
        "extapiGetVmxcTxHistoryResponse": {
            "properties": {
                "count": {
                    "format": "int64",
                    "type": "string"
                },
                "txHistory": {
                    "items": {
                        "$ref": "#/definitions/extapiVmxcTxHistory"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGetWalletBalanceResponse": {
            "properties": {
                "balance": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetWalletMiningIncomeResponse": {
            "properties": {
                "miningIncome": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetWithdrawFeeResponse": {
            "properties": {
                "currency": {
                    "description": "actual currency of the withdraw fee\nfor BTC, withdraw fee should be in MXC",
                    "type": "string"
                },
                "withdrawFee": {
                    "description": "Withdraw object.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetWithdrawHistoryResponse": {
            "properties": {
                "withdrawHistory": {
                    "items": {
                        "$ref": "#/definitions/extapiWithdrawHistory"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGetWithdrawRequest": {
            "properties": {
                "amount": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "ethAddress": {
                    "type": "string"
                },
                "orgId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGetWithdrawResponse": {
            "properties": {
                "status": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "extapiGlobalSearchResponse": {
            "properties": {
                "result": {
                    "items": {
                        "$ref": "#/definitions/extapiGlobalSearchResult"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiGlobalSearchResult": {
            "properties": {
                "applicationID": {
                    "description": "Application id.",
                    "format": "int64",
                    "type": "string"
                },
                "applicationName": {
                    "description": "Application name.",
                    "type": "string"
                },
                "deviceDevEUI": {
                    "description": "Device DevEUI (hex encoded).",
                    "type": "string"
                },
                "deviceName": {
                    "description": "Device name.",
                    "type": "string"
                },
                "gatewayMAC": {
                    "description": "Gateway MAC (hex encoded).",
                    "type": "string"
                },
                "gatewayName": {
                    "description": "Gateway name.",
                    "type": "string"
                },
                "kind": {
                    "description": "Record kind.",
                    "type": "string"
                },
                "organizationID": {
                    "description": "Organization id.",
                    "format": "int64",
                    "type": "string"
                },
                "organizationName": {
                    "description": "Organization name.",
                    "type": "string"
                },
                "score": {
                    "description": "Search score.",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "extapiGoogleRecaptchaRequest": {
            "properties": {
                "remoteip": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiGoogleRecaptchaResponse": {
            "properties": {
                "challengeTs": {
                    "type": "string"
                },
                "errorCodes": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "extapiHTTPIntegration": {
            "properties": {
                "ackNotificationURL": {
                    "description": "The URL to call for ACK notifications (for confirmed downlink data).",
                    "type": "string"
                },
                "applicationID": {
                    "description": "The id of the application.",
                    "format": "int64",
                    "type": "string"
                },
                "errorNotificationURL": {
                    "description": "The URL to call for error notifications.",
                    "type": "string"
                },
                "headers": {
                    "description": "The headers to use when making HTTP callbacks.",
                    "items": {
                        "$ref": "#/definitions/extapiHTTPIntegrationHeader"
                    },
                    "type": "array"
                },
                "integrationNotificationURL": {
                    "description": "The URL to call for integration notifications.",
                    "type": "string"
                },
                "joinNotificationURL": {
                    "description": "The URL to call for join notifications.",
                    "type": "string"
                },
                "locationNotificationURL": {
                    "description": "The URL to call for location notifications.",
                    "type": "string"
                },
                "statusNotificationURL": {
                    "description": "The URL to call for device-status notifications.",
                    "type": "string"
                },
                "txAckNotificationURL": {
                    "description": "The URL to call for tx ack notifications (downlink acknowledged by gateway for transmission).",
                    "type": "string"
                },
                "uplinkDataURL": {
                    "description": "The URL to call for uplink data.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiHTTPIntegrationHeader": {
            "properties": {
                "key": {
                    "description": "Key",
                    "type": "string"
                },
                "value": {
                    "description": "Value",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiInfluxDBIntegration": {
            "properties": {
                "applicationID": {
                    "description": "Application ID.",
                    "format": "int64",
                    "type": "string"
                },
                "db": {
                    "description": "InfluxDB database name.",
                    "type": "string"
                },
                "endpoint": {
                    "description": "InfluxDB API write endpoint (e.g. http://localhost:8086/write).",
                    "type": "string"
                },
                "password": {
                    "description": "InfluxDB password.",
                    "type": "string"
                },
                "precision": {
                    "$ref": "#/definitions/extapiInfluxDBPrecision",
                    "description": "InfluxDB timestamp precision."
                },
                "retentionPolicyName": {
                    "description": "InfluxDB retention policy name.",
                    "type": "string"
                },
                "username": {
                    "description": "InfluxDB username.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiInfluxDBPrecision": {
            "default": "NS",
            "enum": [
                "NS",
                "U",
                "MS",
                "S",
                "M",
                "H"
            ],
            "type": "string"
        },
        "extapiInsertNewDefaultGatewayConfigRequest": {
            "properties": {
                "defaultConfig": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiInsertNewDefaultGatewayConfigResponse": {
            "properties": {
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiIntegrationKind": {
            "default": "HTTP",
            "enum": [
                "HTTP",
                "INFLUXDB",
                "THINGSBOARD",
                "MYDEVICES",
                "LORACLOUD"
            ],
            "type": "string"
        },
        "extapiIntegrationListItem": {
            "properties": {
                "kind": {
                    "$ref": "#/definitions/extapiIntegrationKind",
                    "description": "Integration kind."
                }
            },
            "type": "object"
        },
        "extapiJWTAuthenticationRequest": {
            "type": "object"
        },
        "extapiJWTAuthenticationResponse": {
            "type": "object"
        },
        "extapiListApplicationResponse": {
            "properties": {
                "result": {
                    "description": "Applications within this result-set.",
                    "items": {
                        "$ref": "#/definitions/extapiApplicationListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "Total number of applications available within the result-set.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiListCellsResponse": {
            "properties": {
                "cell": {
                    "description": "list of cells with number of gateways in each",
                    "items": {
                        "$ref": "#/definitions/extapiCell"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiListDeviceProfileResponse": {
            "properties": {
                "result": {
                    "items": {
                        "$ref": "#/definitions/extapiDeviceProfileListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "Total number of device-profiles.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiListDeviceQueueItemsResponse": {
            "properties": {
                "deviceQueueItems": {
                    "items": {
                        "$ref": "#/definitions/extapiDeviceQueueItem"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiListDeviceResponse": {
            "properties": {
                "result": {
                    "description": "Devices within this result-set.",
                    "items": {
                        "$ref": "#/definitions/extapiDeviceListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "Total number of devices available within the result-set.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiListFUOTADeploymentDevicesResponse": {
            "properties": {
                "result": {
                    "items": {
                        "$ref": "#/definitions/extapiFUOTADeploymentDeviceListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "Total number of devices for the FUOTA deployment.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiListFUOTADeploymentResponse": {
            "properties": {
                "result": {
                    "description": "Deployments within this result-set.",
                    "items": {
                        "$ref": "#/definitions/extapiFUOTADeploymentListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "Total number of deployments available within the result-set.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiListGatewayLocationsResponse": {
            "properties": {
                "result": {
                    "description": "Nodes within this result-set.",
                    "items": {
                        "$ref": "#/definitions/extapiGatewayLocationListItem"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiListGatewayProfilesResponse": {
            "properties": {
                "result": {
                    "items": {
                        "$ref": "#/definitions/extapiGatewayProfileListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "Total number of gateway-profiles.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiListGatewayResponse": {
            "properties": {
                "result": {
                    "description": "Nodes within this result-set.",
                    "items": {
                        "$ref": "#/definitions/extapiGatewayListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "Total number of nodes available within the result-set.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiListIntegrationResponse": {
            "properties": {
                "result": {
                    "description": "Integrations within result-set.",
                    "items": {
                        "$ref": "#/definitions/extapiIntegrationListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "Total number of integrations available within the result-set.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiListMulticastGroupQueueItemsResponse": {
            "properties": {
                "multicastQueueItems": {
                    "items": {
                        "$ref": "#/definitions/extapiMulticastQueueItem"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiListMulticastGroupResponse": {
            "properties": {
                "result": {
                    "items": {
                        "$ref": "#/definitions/extapiMulticastGroupListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "Total number of multicast-groups.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiListNetworkServerResponse": {
            "properties": {
                "result": {
                    "description": "Network-servers within the result-set.",
                    "items": {
                        "$ref": "#/definitions/extapiNetworkServerListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "Total number of network-servers.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiListOrganizationResponse": {
            "properties": {
                "result": {
                    "items": {
                        "$ref": "#/definitions/extapiOrganizationListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "Total number of organizations.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiListOrganizationUsersResponse": {
            "properties": {
                "result": {
                    "items": {
                        "$ref": "#/definitions/extapiOrganizationUserListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "The total number of users in the organization.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiListServiceProfileResponse": {
            "properties": {
                "result": {
                    "items": {
                        "$ref": "#/definitions/extapiServiceProfileListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "Total number of service-profiles.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiListUserResponse": {
            "properties": {
                "result": {
                    "description": "Result-set.",
                    "items": {
                        "$ref": "#/definitions/extapiUserListItem"
                    },
                    "type": "array"
                },
                "totalCount": {
                    "description": "Total number of users.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiLoRaCloudIntegration": {
            "properties": {
                "applicationID": {
                    "description": "Application ID.",
                    "format": "int64",
                    "type": "string"
                },
                "das": {
                    "description": "Device Application Services enabled.",
                    "type": "boolean"
                },
                "dasModemPort": {
                    "description": "Device Application Services modem port (FPort).\nChirpStack Application Server will only forward the FRMPayload to DAS\nwhen the uplink FPort is equal to this value.",
                    "format": "int64",
                    "type": "integer"
                },
                "dasToken": {
                    "description": "Device Application Services token.\nThis token can be obtained from the LoRa Cloud console.",
                    "type": "string"
                },
                "geolocation": {
                    "description": "Geolocation enabled.",
                    "type": "boolean"
                },
                "geolocationBufferTTL": {
                    "description": "Geolocation buffer TTL (in seconds).\nWhen > 0, uplink RX meta-data will be stored in a buffer so that\nthe meta-data of multiple uplinks can be used for geolocation.",
                    "format": "int64",
                    "type": "integer"
                },
                "geolocationGNSS": {
                    "description": "GNSS based geolocation is enabled (LR1110).",
                    "type": "boolean"
                },
                "geolocationGNSSPayloadField": {
                    "description": "GNSS payload field.\nThis holds the name of the field in the decoded payload object which\ncontains the GNSS payload bytes.",
                    "type": "string"
                },
                "geolocationGNSSUseRxTime": {
                    "description": "GNSS use RX time.\nIn case this is set to true, the resolver will use the RX time of the\nnetwork instead of the timestamp included in the LR1110 payload.",
                    "type": "boolean"
                },
                "geolocationMinBufferSize": {
                    "description": "Geolocation minimum buffer size.\nWhen > 0, geolocation will only be performed when the buffer has\nat least the given size.",
                    "format": "int64",
                    "type": "integer"
                },
                "geolocationRSSI": {
                    "description": "RSSI based geolocation is enabled.",
                    "type": "boolean"
                },
                "geolocationTDOA": {
                    "description": "TDOA based geolocation is enabled.",
                    "type": "boolean"
                },
                "geolocationToken": {
                    "description": "Geolocation token.\nThis token can be obtained from the LoRa Cloud console.",
                    "type": "string"
                },
                "geolocationWifi": {
                    "description": "Wifi based geolocation is enabled.",
                    "type": "boolean"
                },
                "geolocationWifiPayloadField": {
                    "description": "Wifi payload field.\nThis holds the name of the field in the decoded payload object which\ncontains an array of objects with the following fields:\n* macAddress - e.g. 01:23:45:67:89:ab\n* signalStrength - e.g. -51 (optional)",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiLogin2FARequest": {
            "type": "object"
        },
        "extapiLoginRequest": {
            "properties": {
                "password": {
                    "description": "Password of the user.",
                    "type": "string"
                },
                "username": {
                    "description": "Username of the user.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiLoginResponse": {
            "properties": {
                "is2faRequired": {
                    "description": "Two-factor authentication is required to finish the process",
                    "type": "boolean"
                },
                "jwt": {
                    "description": "The JWT token to be used to access lora-app-server interfaces.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiManualTriggerUpdateFirmwareRequest": {
            "type": "object"
        },
        "extapiManualTriggerUpdateFirmwareResponse": {
            "type": "object"
        },
        "extapiMiningData": {
            "properties": {
                "amount": {
                    "type": "string"
                },
                "month": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiMiningHealthAverage": {
            "properties": {
                "miningFuelHealth": {
                    "description": "average mining fuel health",
                    "format": "float",
                    "type": "number"
                },
                "overall": {
                    "description": "overall health of the gateways",
                    "format": "float",
                    "type": "number"
                },
                "uptimeHealth": {
                    "description": "average uptime",
                    "format": "float",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "extapiMiningReportResponse": {
            "properties": {
                "data": {
                    "format": "byte",
                    "type": "string"
                },
                "finish": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "extapiMiningStats": {
            "description": "Mining stats for a single date",
            "properties": {
                "amount": {
                    "description": "amount mined on the specified day",
                    "type": "string"
                },
                "date": {
                    "description": "date on which the mining happened",
                    "format": "date-time",
                    "type": "string"
                },
                "health": {
                    "description": "average gateway's health on the date",
                    "format": "float",
                    "type": "number"
                },
                "onlineSeconds": {
                    "description": "gateway's online time on the date",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiModifySettingsRequest": {
            "properties": {
                "downlinkFee": {
                    "format": "int64",
                    "type": "string"
                },
                "lowBalanceWarning": {
                    "format": "int64",
                    "type": "string"
                },
                "transactionPercentageShare": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiModifySettingsResponse": {
            "properties": {
                "status": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "extapiModifyWithdrawFeeRequest": {
            "properties": {
                "currency": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "withdrawFee": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiModifyWithdrawFeeResponse": {
            "properties": {
                "status": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "extapiMulticastGroup": {
            "properties": {
                "dr": {
                    "description": "Data-rate.",
                    "format": "int64",
                    "type": "integer"
                },
                "fCnt": {
                    "description": "Frame-counter.",
                    "format": "int64",
                    "type": "integer"
                },
                "frequency": {
                    "description": "Frequency (Hz).",
                    "format": "int64",
                    "type": "integer"
                },
                "groupType": {
                    "$ref": "#/definitions/extapiMulticastGroupType",
                    "description": "Multicast type."
                },
                "id": {
                    "description": "ID (string formatted UUID).\nThis will be generated automatically on create.",
                    "type": "string"
                },
                "mcAddr": {
                    "description": "Multicast address (HEX encoded DevAddr).",
                    "type": "string"
                },
                "mcAppSKey": {
                    "description": "Multicast application session key (HEX encoded AES128 key).",
                    "type": "string"
                },
                "mcNwkSKey": {
                    "description": "Multicast network session key (HEX encoded AES128 key).",
                    "type": "string"
                },
                "name": {
                    "description": "Multicast-group name.",
                    "type": "string"
                },
                "pingSlotPeriod": {
                    "description": "Ping-slot period.\nMandatory for Class-B multicast groups.",
                    "format": "int64",
                    "type": "integer"
                },
                "serviceProfileID": {
                    "description": "Service-profile ID.\nAfter creation, this can not be updated.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiMulticastGroupListItem": {
            "properties": {
                "id": {
                    "description": "ID (string formatted UUID).",
                    "type": "string"
                },
                "name": {
                    "description": "Multicast-group name.",
                    "type": "string"
                },
                "serviceProfileID": {
                    "description": "Service-profile ID (string formatted UUID).",
                    "type": "string"
                },
                "serviceProfileName": {
                    "description": "Service-profile name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiMulticastGroupType": {
            "default": "CLASS_C",
            "description": " - CLASS_C: Class-C.\n - CLASS_B: Class-B.",
            "enum": [
                "CLASS_C",
                "CLASS_B"
            ],
            "type": "string"
        },
        "extapiMulticastQueueItem": {
            "properties": {
                "data": {
                    "description": "Base64 encoded data.",
                    "format": "byte",
                    "type": "string"
                },
                "fCnt": {
                    "description": "Downlink frame-counter.\nThis will be automatically set on enqueue.",
                    "format": "int64",
                    "type": "integer"
                },
                "fPort": {
                    "description": "FPort used (must be > 0).",
                    "format": "int64",
                    "type": "integer"
                },
                "multicastGroupID": {
                    "description": "Multicast-group ID (string formatted UUID).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiMyDevicesIntegration": {
            "properties": {
                "applicationID": {
                    "description": "Application ID.",
                    "format": "int64",
                    "type": "string"
                },
                "endpoint": {
                    "description": "MyDevices API endpoint.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiNetworkServer": {
            "properties": {
                "caCert": {
                    "description": "CA certificate (optional).",
                    "type": "string"
                },
                "gatewayDiscoveryDR": {
                    "description": "The data-rate of the gateway discovery 'ping'.",
                    "format": "int64",
                    "type": "integer"
                },
                "gatewayDiscoveryEnabled": {
                    "description": "Enable gateway discovery for this network-server.",
                    "type": "boolean"
                },
                "gatewayDiscoveryInterval": {
                    "description": "The number of times per day the gateway discovery 'ping' must be\nbroadcasted per gateway.",
                    "format": "int64",
                    "type": "integer"
                },
                "gatewayDiscoveryTXFrequency": {
                    "description": "The frequency (Hz) of the gateway discovery 'ping'.",
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "description": "Network-server ID.",
                    "format": "int64",
                    "type": "string"
                },
                "name": {
                    "description": "Network-server name.",
                    "type": "string"
                },
                "routingProfileCACert": {
                    "description": "Routing-profile ca certificate (used by the network-server to connect\nback to the application-server) (optional).",
                    "type": "string"
                },
                "routingProfileTLSCert": {
                    "description": "Routing-profile TLS certificate (used by the network-server to connect\nback to the application-server) (optional).",
                    "type": "string"
                },
                "routingProfileTLSKey": {
                    "description": "Routing-profile TLS key (used by the network-server to connect\nback to the application-server) (optional).",
                    "type": "string"
                },
                "server": {
                    "description": "Network-server server.\nFormat: hostname:ip (e.g. localhost:8000).",
                    "type": "string"
                },
                "tlsCert": {
                    "description": "TLS (client) certificate for connecting to the network-server (optional).",
                    "type": "string"
                },
                "tlsKey": {
                    "description": "TLS (client) key for connecting to the network-server (optional).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiNetworkServerListItem": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "Network-server ID.",
                    "format": "int64",
                    "type": "string"
                },
                "name": {
                    "description": "Network-server name.",
                    "type": "string"
                },
                "server": {
                    "description": "Network-server server.\nFormat: hostname:ip (e.g. localhost:8000).",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiNetworkUsage": {
            "properties": {
                "amount": {
                    "type": "string"
                },
                "dlCntDev": {
                    "format": "int64",
                    "type": "string"
                },
                "dlCntDevFree": {
                    "format": "int64",
                    "type": "string"
                },
                "dlCntGw": {
                    "format": "int64",
                    "type": "string"
                },
                "dlCntGwFree": {
                    "format": "int64",
                    "type": "string"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string"
                },
                "ulCntDev": {
                    "format": "int64",
                    "type": "string"
                },
                "ulCntDevFree": {
                    "format": "int64",
                    "type": "string"
                },
                "ulCntGw": {
                    "format": "int64",
                    "type": "string"
                },
                "ulCntGwFree": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiOrder": {
            "properties": {
                "amountProduct": {
                    "description": "amount of product with given product_id from an order with given order_id",
                    "format": "int64",
                    "type": "string"
                },
                "bonusPerPieceUsd": {
                    "description": "amount of USD rewarded to user for purchasing one product with given product id",
                    "type": "string"
                },
                "bonusStatus": {
                    "description": "when bonus_status is 'done'\n users who request refund will get ( number of returned good * bonus_per_piece_usd ) less\nwhen bonus_status is 'pending'\n users will get refund with full amount",
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "orderId": {
                    "description": "order id is generated and maintained on shopify service side, appserver saves this as a reference",
                    "type": "string"
                },
                "productId": {
                    "description": "used to identify a specific product created in shopify",
                    "type": "string"
                },
                "shopifyAccount": {
                    "description": "email address user used for shopify account,",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiOrganization": {
            "properties": {
                "canHaveGateways": {
                    "description": "Can the organization create and \"own\" Gateways?",
                    "type": "boolean"
                },
                "displayName": {
                    "description": "Organization display name.",
                    "type": "string"
                },
                "id": {
                    "description": "Organization ID.",
                    "format": "int64",
                    "type": "string"
                },
                "maxDeviceCount": {
                    "description": "Max. device count for organization.\nWhen set to 0, the organization can have unlimited devices.",
                    "format": "int64",
                    "type": "integer"
                },
                "maxGatewayCount": {
                    "description": "Max. gateway count for organization.\nWhen set to 0, the organization can have unlimited gateways.",
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "description": "Organization name.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiOrganizationLink": {
            "description": "Defines an organization to which an user is associated.",
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "isAdmin": {
                    "description": "User is admin within the context of this organization.\nThere is no need to set the is_device_admin and is_gateway_admin flags.",
                    "type": "boolean"
                },
                "isDeviceAdmin": {
                    "description": "User is able to modify device related resources (applications,\ndevice-profiles, devices, multicast-groups).",
                    "type": "boolean"
                },
                "isGatewayAdmin": {
                    "description": "User is able to modify gateways.",
                    "type": "boolean"
                },
                "organizationDisplayName": {
                    "description": "organization display name",
                    "type": "string"
                },
                "organizationID": {
                    "description": "Organization ID.",
                    "format": "int64",
                    "type": "string"
                },
                "organizationName": {
                    "description": "Organization name.",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiOrganizationListItem": {
            "properties": {
                "canHaveGateways": {
                    "description": "Can the organization create and \"own\" Gateways?",
                    "type": "boolean"
                },
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "displayName": {
                    "description": "Organization display name.",
                    "type": "string"
                },
                "id": {
                    "description": "Organization ID.",
                    "format": "int64",
                    "type": "string"
                },
                "name": {
                    "description": "Organization name.",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiOrganizationUser": {
            "properties": {
                "isAdmin": {
                    "description": "User is admin within the context of the organization.\nThere is no need to set the is_device_admin and is_gateway_admin flags.",
                    "type": "boolean"
                },
                "isDeviceAdmin": {
                    "description": "User is able to modify device related resources (applications,\ndevice-profiles, devices, multicast-groups).",
                    "type": "boolean"
                },
                "isGatewayAdmin": {
                    "description": "User is able to modify gateways.",
                    "type": "boolean"
                },
                "organizationID": {
                    "description": "Organization ID.",
                    "format": "int64",
                    "type": "string"
                },
                "userID": {
                    "description": "User ID.",
                    "format": "int64",
                    "type": "string"
                },
                "username": {
                    "description": "Username (only used on get).",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiOrganizationUserListItem": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "isAdmin": {
                    "description": "User is admin within the context of the organization.\nThere is no need to set the is_device_admin and is_gateway_admin flags.",
                    "type": "boolean"
                },
                "isDeviceAdmin": {
                    "description": "User is able to modify device related resources (applications,\ndevice-profiles, devices, multicast-groups).",
                    "type": "boolean"
                },
                "isGatewayAdmin": {
                    "description": "User is able to modify gateways.",
                    "type": "boolean"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "userID": {
                    "description": "User ID.",
                    "format": "int64",
                    "type": "string"
                },
                "username": {
                    "description": "Username.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiPasswordResetReq": {
            "properties": {
                "language": {
                    "description": "language for the email",
                    "type": "string"
                },
                "username": {
                    "description": "username to reset password for",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiPasswordResetResp": {
            "type": "object"
        },
        "extapiPingRX": {
            "properties": {
                "altitude": {
                    "description": "Altitude of the gateway in meters.",
                    "format": "double",
                    "type": "number"
                },
                "gatewayID": {
                    "description": "Gateway ID (HEX encoded).",
                    "type": "string"
                },
                "latitude": {
                    "description": "Latitude of the gateway -90.0 to 90.0.",
                    "format": "double",
                    "type": "number"
                },
                "loRaSNR": {
                    "description": "LoRa SNR.",
                    "format": "double",
                    "type": "number"
                },
                "longitude": {
                    "description": "Longitude of the gateway -180.0 to 180.0.",
                    "format": "double",
                    "type": "number"
                },
                "rssi": {
                    "description": "RSSI.",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "extapiProfileResponse": {
            "properties": {
                "externalUserAccounts": {
                    "description": "ExternalUserAccount to which the user is associated.",
                    "items": {
                        "$ref": "#/definitions/extapiExternalUserAccount"
                    },
                    "type": "array"
                },
                "lastLoginService": {
                    "type": "string"
                },
                "organizations": {
                    "description": "Organizations to which the user is associated.",
                    "items": {
                        "$ref": "#/definitions/extapiOrganizationLink"
                    },
                    "type": "array"
                },
                "user": {
                    "$ref": "#/definitions/extapiUser",
                    "description": "User object."
                }
            },
            "type": "object"
        },
        "extapiRatePolicy": {
            "default": "DROP",
            "description": "- DROP: Drop\n - MARK: Mark",
            "enum": [
                "DROP",
                "MARK"
            ],
            "type": "string"
        },
        "extapiRegisterExternalUserRequest": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "organizationName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiRegisterExternalUserResponse": {
            "properties": {
                "jwt": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiRegisterRequest": {
            "properties": {
                "organizationId": {
                    "format": "int64",
                    "type": "string"
                },
                "sn": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiRegisterResellerRequest": {
            "properties": {
                "manufacturerNr": {
                    "type": "string"
                },
                "organizationId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiRegisterResellerResponse": {
            "properties": {
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiRegisterResponse": {
            "properties": {
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiRegisterUserRequest": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiResetDefaultGatewatConfigByIDRequest": {
            "properties": {
                "id": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiResetDefaultGatewatConfigByIDResponse": {
            "properties": {
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiSendCommandToDeviceResponse": {
            "properties": {
                "topic": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiServiceProfile": {
            "properties": {
                "addGWMetaData": {
                    "description": "GW metadata (RSSI, SNR, GW geoloc., etc.) are added to the packet sent to AS.",
                    "type": "boolean"
                },
                "channelMask": {
                    "description": "Channel mask. sNS does not have to obey (i.e., informative).",
                    "format": "byte",
                    "type": "string"
                },
                "devStatusReqFreq": {
                    "description": "Frequency to initiate an End-Device status request (request/day).",
                    "format": "int64",
                    "type": "integer"
                },
                "dlBucketSize": {
                    "description": "Token bucket burst size.",
                    "format": "int64",
                    "type": "integer"
                },
                "dlRate": {
                    "description": "Token bucket filling rate, including ACKs (packet/h).",
                    "format": "int64",
                    "type": "integer"
                },
                "dlRatePolicy": {
                    "$ref": "#/definitions/extapiRatePolicy",
                    "description": "Drop or mark when exceeding DLRate."
                },
                "drMax": {
                    "description": "Maximum allowed data rate. Used for ADR.",
                    "format": "int64",
                    "type": "integer"
                },
                "drMin": {
                    "description": "Minimum allowed data rate. Used for ADR.",
                    "format": "int64",
                    "type": "integer"
                },
                "hrAllowed": {
                    "description": "Handover Roaming allowed.",
                    "type": "boolean"
                },
                "id": {
                    "description": "Service-profile ID (UUID string).\nThis will be automatically set on create.",
                    "type": "string"
                },
                "minGWDiversity": {
                    "description": "Minimum number of receiving GWs (informative).",
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "description": "Service-profile name.",
                    "type": "string"
                },
                "networkServerID": {
                    "description": "Network-server ID on which the service-profile is provisioned.",
                    "format": "int64",
                    "type": "string"
                },
                "nwkGeoLoc": {
                    "description": "Enable network geolocation service.",
                    "type": "boolean"
                },
                "organizationID": {
                    "description": "Organization ID to which the service-profile is assigned.",
                    "format": "int64",
                    "type": "string"
                },
                "prAllowed": {
                    "description": "Passive Roaming allowed.",
                    "type": "boolean"
                },
                "raAllowed": {
                    "description": "Roaming Activation allowed.",
                    "type": "boolean"
                },
                "reportDevStatusBattery": {
                    "description": "Report End-Device battery level to AS.",
                    "type": "boolean"
                },
                "reportDevStatusMargin": {
                    "description": "Report End-Device margin to AS.",
                    "type": "boolean"
                },
                "targetPER": {
                    "description": "Target Packet Error Rate.",
                    "format": "int64",
                    "type": "integer"
                },
                "ulBucketSize": {
                    "description": "Token bucket burst size.",
                    "format": "int64",
                    "type": "integer"
                },
                "ulRate": {
                    "description": "Token bucket filling rate, including ACKs (packet/h).",
                    "format": "int64",
                    "type": "integer"
                },
                "ulRatePolicy": {
                    "$ref": "#/definitions/extapiRatePolicy",
                    "description": "Drop or mark when exceeding ULRate."
                }
            },
            "type": "object"
        },
        "extapiServiceProfileListItem": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "Service-profile ID (UUID string).",
                    "type": "string"
                },
                "name": {
                    "description": "Service-profile name.",
                    "type": "string"
                },
                "networkServerID": {
                    "description": "Network-server ID of the service-profile.",
                    "format": "int64",
                    "type": "string"
                },
                "organizationID": {
                    "description": "Organization ID of the service-profile.",
                    "format": "int64",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiSetAutoUpdateFirmwareRequest": {
            "properties": {
                "autoUpdate": {
                    "type": "boolean"
                },
                "gatewayId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiSetAutoUpdateFirmwareResponse": {
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiSetDeviceModeRequest": {
            "properties": {
                "devId": {
                    "format": "int64",
                    "type": "string"
                },
                "devMode": {
                    "$ref": "#/definitions/extapiDeviceMode"
                },
                "orgId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiSetDeviceModeResponse": {
            "properties": {
                "status": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "extapiSetGatewayModeRequest": {
            "properties": {
                "gwId": {
                    "format": "int64",
                    "type": "string"
                },
                "gwMode": {
                    "$ref": "#/definitions/extapiGatewayMode"
                },
                "orgId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiSetGatewayModeResponse": {
            "properties": {
                "status": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "extapiStake": {
            "properties": {
                "active": {
                    "description": "if stake is active",
                    "type": "boolean"
                },
                "amount": {
                    "description": "amount staked",
                    "type": "string"
                },
                "boost": {
                    "description": "boost [0, 1]",
                    "type": "string"
                },
                "endTime": {
                    "description": "when stake was withdrawn",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "string"
                },
                "lockTill": {
                    "description": "the time till which the stake is locked and can't be withdrawn",
                    "format": "date-time",
                    "type": "string"
                },
                "revenue": {
                    "description": "total stake revenue so far",
                    "type": "string"
                },
                "startTime": {
                    "description": "when stake was placed",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiStakeInfoResponse": {
            "properties": {
                "revenues": {
                    "description": "all the revenues that were paid for this stake",
                    "items": {
                        "$ref": "#/definitions/extapiStakeRevenue"
                    },
                    "type": "array"
                },
                "stake": {
                    "$ref": "#/definitions/extapiStake",
                    "description": "information about the stake"
                }
            },
            "type": "object"
        },
        "extapiStakeRequest": {
            "properties": {
                "amount": {
                    "type": "string"
                },
                "boost": {
                    "description": "the boost [0,1]",
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "lockPeriods": {
                    "description": "for how many periods stake should be locked",
                    "format": "int64",
                    "type": "string"
                },
                "orgId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiStakeResponse": {
            "properties": {
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiStakeRevenue": {
            "properties": {
                "amount": {
                    "type": "string"
                },
                "time": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiStakingHistory": {
            "properties": {
                "amount": {
                    "type": "string"
                },
                "stake": {
                    "$ref": "#/definitions/extapiStake"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiStakingHistoryResponse": {
            "properties": {
                "stakingHist": {
                    "items": {
                        "$ref": "#/definitions/extapiStakingHistory"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiStakingPercentageResponse": {
            "description": "information about staking share and boosts",
            "properties": {
                "lockBoosts": {
                    "description": "list of boosts for locking stake for different periods",
                    "items": {
                        "$ref": "#/definitions/extapiBoost"
                    },
                    "type": "array"
                },
                "stakingInterest": {
                    "description": "base staking interest",
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "extapiStakingRevenueResponse": {
            "properties": {
                "amount": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiStreamDeviceEventLogsResponse": {
            "properties": {
                "payloadJSON": {
                    "description": "The event payload in JSON encoding.",
                    "type": "string"
                },
                "type": {
                    "description": "The event type.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiStreamDeviceFrameLogsResponse": {
            "properties": {
                "downlinkFrame": {
                    "$ref": "#/definitions/extapiDownlinkFrameLog",
                    "description": "Contains a downlink frame."
                },
                "uplinkFrame": {
                    "$ref": "#/definitions/extapiUplinkFrameLog",
                    "description": "Contains an uplink frame."
                }
            },
            "type": "object"
        },
        "extapiStreamGatewayFrameLogsResponse": {
            "properties": {
                "downlinkFrame": {
                    "$ref": "#/definitions/extapiDownlinkFrameLog",
                    "description": "Contains a downlink frame."
                },
                "uplinkFrame": {
                    "$ref": "#/definitions/extapiUplinkFrameLog",
                    "description": "Contains an uplink frame."
                }
            },
            "type": "object"
        },
        "extapiSubsribeApplicationEventsResponse": {
            "properties": {
                "topic": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiSubsribeDeviceEventsResponse": {
            "properties": {
                "topic": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiTOTPStatusRequest": {
            "type": "object"
        },
        "extapiTOTPStatusResponse": {
            "properties": {
                "enabled": {
                    "description": "set to true if TOTP is enabled",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "extapiThingsBoardIntegration": {
            "properties": {
                "applicationID": {
                    "description": "Application ID.",
                    "format": "int64",
                    "type": "string"
                },
                "server": {
                    "description": "ThingsBoard server endpoint, e.g. https://example.com",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiTopUpGatewayMiningFuelRequest": {
            "description": "top up amount bonded to a gateway",
            "properties": {
                "currency": {
                    "description": "currency",
                    "type": "string"
                },
                "orgId": {
                    "description": "organization id",
                    "format": "int64",
                    "type": "string"
                },
                "topUps": {
                    "description": "gateways and amounts that should be added to them",
                    "items": {
                        "$ref": "#/definitions/extapiGatewayMiningFuelChange"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiTopUpGatewayMiningFuelResponse": {
            "type": "object"
        },
        "extapiTopUpHistory": {
            "properties": {
                "amount": {
                    "type": "string"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string"
                },
                "txHash": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiTopUpResponse": {
            "type": "object"
        },
        "extapiTransaction": {
            "properties": {
                "amount": {
                    "description": "amount, decimal number with up to 18 decimal digits",
                    "type": "string"
                },
                "detailsJson": {
                    "description": "transaction details encoded as JSON",
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "string"
                },
                "paymentType": {
                    "description": "payment type as a string",
                    "type": "string"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiUnbindExternalUserRequest": {
            "properties": {
                "organizationId": {
                    "format": "int64",
                    "type": "string"
                },
                "service": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiUnbindExternalUserResponse": {
            "properties": {
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiUnstakeRequest": {
            "properties": {
                "orgId": {
                    "format": "int64",
                    "type": "string"
                },
                "stakeId": {
                    "description": "string currency = 2;",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiUnstakeResponse": {
            "properties": {
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiUpdateApplicationRequest": {
            "properties": {
                "application": {
                    "$ref": "#/definitions/extapiApplication",
                    "description": "Application object to update."
                }
            },
            "type": "object"
        },
        "extapiUpdateDefaultGatewayConfigRequest": {
            "properties": {
                "defaultConfig": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiUpdateDefaultGatewayConfigResponse": {
            "properties": {
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiUpdateDeviceKeysRequest": {
            "properties": {
                "deviceKeys": {
                    "$ref": "#/definitions/extapiDeviceKeys",
                    "description": "Device-keys object to update."
                }
            },
            "type": "object"
        },
        "extapiUpdateDeviceProfileRequest": {
            "properties": {
                "deviceProfile": {
                    "$ref": "#/definitions/extapiDeviceProfile",
                    "description": "Device-profile object to update."
                }
            },
            "type": "object"
        },
        "extapiUpdateDeviceRequest": {
            "properties": {
                "device": {
                    "$ref": "#/definitions/extapiDevice",
                    "description": "Device object to update."
                }
            },
            "type": "object"
        },
        "extapiUpdateGatewayProfileRequest": {
            "properties": {
                "gatewayProfile": {
                    "$ref": "#/definitions/extapiGatewayProfile",
                    "description": "Gateway-profile object to update."
                }
            },
            "type": "object"
        },
        "extapiUpdateGatewayRequest": {
            "properties": {
                "gateway": {
                    "$ref": "#/definitions/extapiGateway",
                    "description": "Gateway object to update."
                }
            },
            "type": "object"
        },
        "extapiUpdateGwConfigRequest": {
            "properties": {
                "conf": {
                    "type": "string"
                },
                "gatewayId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiUpdateGwConfigResponse": {
            "properties": {
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiUpdateHTTPIntegrationRequest": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiHTTPIntegration",
                    "description": "Integration object to update."
                }
            },
            "type": "object"
        },
        "extapiUpdateInfluxDBIntegrationRequest": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiInfluxDBIntegration",
                    "description": "Integration object."
                }
            },
            "type": "object"
        },
        "extapiUpdateLoRaCloudIntegrationRequest": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiLoRaCloudIntegration",
                    "description": "Integration object."
                }
            },
            "type": "object"
        },
        "extapiUpdateMulticastGroupRequest": {
            "properties": {
                "multicastGroup": {
                    "$ref": "#/definitions/extapiMulticastGroup",
                    "description": "Multicast-group object to update."
                }
            },
            "type": "object"
        },
        "extapiUpdateMyDevicesIntegrationRequest": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiMyDevicesIntegration",
                    "description": "Integration object."
                }
            },
            "type": "object"
        },
        "extapiUpdateNetworkServerRequest": {
            "properties": {
                "networkServer": {
                    "$ref": "#/definitions/extapiNetworkServer",
                    "description": "Network-server object to update."
                }
            },
            "type": "object"
        },
        "extapiUpdateOrganizationRequest": {
            "properties": {
                "organization": {
                    "$ref": "#/definitions/extapiOrganization",
                    "description": "Organization object to update."
                }
            },
            "type": "object"
        },
        "extapiUpdateOrganizationUserRequest": {
            "properties": {
                "organizationUser": {
                    "$ref": "#/definitions/extapiOrganizationUser",
                    "description": "Organization-user object to update."
                }
            },
            "type": "object"
        },
        "extapiUpdateServiceProfileRequest": {
            "properties": {
                "serviceProfile": {
                    "$ref": "#/definitions/extapiServiceProfile",
                    "description": "Service-profile object to update."
                }
            },
            "type": "object"
        },
        "extapiUpdateThingsBoardIntegrationRequest": {
            "properties": {
                "integration": {
                    "$ref": "#/definitions/extapiThingsBoardIntegration",
                    "description": "Integration object."
                }
            },
            "type": "object"
        },
        "extapiUpdateUserPasswordRequest": {
            "properties": {
                "password": {
                    "description": "New pasword.",
                    "type": "string"
                },
                "userId": {
                    "description": "User ID.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiUpdateUserRequest": {
            "properties": {
                "user": {
                    "$ref": "#/definitions/extapiUser",
                    "description": "User object to update."
                }
            },
            "type": "object"
        },
        "extapiUpdateUserResponse": {
            "properties": {
                "jwt": {
                    "description": "User object to update.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiUplinkFrameLog": {
            "properties": {
                "phyPayloadJSON": {
                    "description": "LoRaWAN PHYPayload.",
                    "type": "string"
                },
                "rxInfo": {
                    "description": "RX information of the uplink.",
                    "items": {
                        "$ref": "#/definitions/gwUplinkRXInfo"
                    },
                    "type": "array"
                },
                "txInfo": {
                    "$ref": "#/definitions/gwUplinkTXInfo",
                    "description": "TX information of the uplink."
                }
            },
            "type": "object"
        },
        "extapiUser": {
            "properties": {
                "email": {
                    "description": "E-mail of the user.",
                    "type": "string"
                },
                "id": {
                    "description": "User ID.\nWill be set automatically on create.",
                    "format": "int64",
                    "type": "string"
                },
                "isActive": {
                    "description": "Set to false to disable the user.",
                    "type": "boolean"
                },
                "isAdmin": {
                    "description": "Set to true to make the user a global administrator.",
                    "type": "boolean"
                },
                "note": {
                    "description": "Optional note to store with the user.",
                    "type": "string"
                },
                "sessionTTL": {
                    "description": "The session timeout, in minutes.",
                    "format": "int32",
                    "type": "integer"
                },
                "username": {
                    "description": "Username of the user.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiUserListItem": {
            "properties": {
                "createdAt": {
                    "description": "Created at timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "User ID.\nWill be set automatically on create.",
                    "format": "int64",
                    "type": "string"
                },
                "isActive": {
                    "description": "Set to false to disable the user.",
                    "type": "boolean"
                },
                "isAdmin": {
                    "description": "Set to true to make the user a global administrator.",
                    "type": "boolean"
                },
                "sessionTTL": {
                    "description": "The session timeout, in minutes.",
                    "format": "int32",
                    "type": "integer"
                },
                "updatedAt": {
                    "description": "Last update timestamp.",
                    "format": "date-time",
                    "type": "string"
                },
                "username": {
                    "description": "Username of the user.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiUserOrganization": {
            "properties": {
                "isAdmin": {
                    "description": "User is admin within the context of the organization.\nThere is no need to set the is_device_admin and is_gateway_admin flags.",
                    "type": "boolean"
                },
                "isDeviceAdmin": {
                    "description": "User is able to modify device related resources (applications,\ndevice-profiles, devices, multicast-groups).",
                    "type": "boolean"
                },
                "isGatewayAdmin": {
                    "description": "User is able to modify gateways.",
                    "type": "boolean"
                },
                "organizationID": {
                    "description": "Organization ID.",
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiVerifyEmailRequest": {
            "properties": {
                "email": {
                    "description": "user will receive confirmation message on given email address",
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "organizationId": {
                    "format": "int64",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiVerifyEmailResponse": {
            "properties": {
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiVmxcTxHistory": {
            "properties": {
                "amount": {
                    "format": "double",
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "txType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiWithdrawGatewayMiningFuelRequest": {
            "description": "withdraw amount from the gateway mining fuel",
            "properties": {
                "currency": {
                    "description": "token that is bonded to the gateway",
                    "type": "string"
                },
                "orgId": {
                    "description": "what organization owns the fuel",
                    "format": "int64",
                    "type": "string"
                },
                "withdrawals": {
                    "description": "gateways and amounts that should be withdrawn from them",
                    "items": {
                        "$ref": "#/definitions/extapiGatewayMiningFuelChange"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "extapiWithdrawGatewayMiningFuelResponse": {
            "type": "object"
        },
        "extapiWithdrawHistory": {
            "properties": {
                "amount": {
                    "type": "string"
                },
                "denyComment": {
                    "type": "string"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string"
                },
                "txHash": {
                    "type": "string"
                },
                "txStatus": {
                    "type": "string"
                },
                "withdrawFee": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "extapiWithdrawResponse": {
            "properties": {
                "msg": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "gwCRCStatus": {
            "default": "NO_CRC",
            "description": " - NO_CRC: No CRC.\n - BAD_CRC: Bad CRC.\n - CRC_OK: CRC OK.",
            "enum": [
                "NO_CRC",
                "BAD_CRC",
                "CRC_OK"
            ],
            "type": "string"
        },
        "gwDelayTimingInfo": {
            "properties": {
                "delay": {
                    "description": "Delay (duration).\nThe delay will be added to the gateway internal timing, provided by the context object.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "gwDownlinkTXInfo": {
            "properties": {
                "antenna": {
                    "description": "The antenna identifier for emitting the frame.",
                    "format": "int64",
                    "type": "integer"
                },
                "board": {
                    "description": "The board identifier for emitting the frame.",
                    "format": "int64",
                    "type": "integer"
                },
                "context": {
                    "description": "Gateway specific context.\nIn case of a Class-A downlink, this contains a copy of the uplink context.",
                    "format": "byte",
                    "type": "string"
                },
                "delayTimingInfo": {
                    "$ref": "#/definitions/gwDelayTimingInfo",
                    "description": "Context based delay timing information."
                },
                "frequency": {
                    "description": "TX frequency (in Hz).",
                    "format": "int64",
                    "type": "integer"
                },
                "fskModulationInfo": {
                    "$ref": "#/definitions/gwFSKModulationInfo",
                    "description": "FSK modulation information."
                },
                "gatewayID": {
                    "description": "Gateway ID.\nDeprecated: replaced by gateway_id in DownlinkFrame.",
                    "format": "byte",
                    "type": "string"
                },
                "gpsEpochTimingInfo": {
                    "$ref": "#/definitions/gwGPSEpochTimingInfo",
                    "description": "GPS Epoch timing information."
                },
                "immediatelyTimingInfo": {
                    "$ref": "#/definitions/gwImmediatelyTimingInfo",
                    "description": "Immediately timing information."
                },
                "loRaModulationInfo": {
                    "$ref": "#/definitions/gwLoRaModulationInfo",
                    "description": "LoRa modulation information."
                },
                "modulation": {
                    "$ref": "#/definitions/commonModulation",
                    "description": "Modulation."
                },
                "power": {
                    "description": "TX power (in dBm).",
                    "format": "int32",
                    "type": "integer"
                },
                "timing": {
                    "$ref": "#/definitions/gwDownlinkTiming",
                    "description": "Timing defines the downlink timing to use."
                }
            },
            "type": "object"
        },
        "gwDownlinkTiming": {
            "default": "IMMEDIATELY",
            "description": " - IMMEDIATELY: Send the downlink immediately.\n - DELAY: Send downlink at the given delay (based on provided context).\n - GPS_EPOCH: Send at given GPS epoch value.",
            "enum": [
                "IMMEDIATELY",
                "DELAY",
                "GPS_EPOCH"
            ],
            "type": "string"
        },
        "gwEncryptedFineTimestamp": {
            "properties": {
                "aesKeyIndex": {
                    "description": "AES key index used for encrypting the fine timestamp.",
                    "format": "int64",
                    "type": "integer"
                },
                "encryptedNS": {
                    "description": "Encrypted 'main' fine-timestamp (ns precision part of the timestamp).",
                    "format": "byte",
                    "type": "string"
                },
                "fpgaID": {
                    "description": "FPGA ID.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "gwFSKModulationInfo": {
            "properties": {
                "datarate": {
                    "description": "FSK datarate (bits / sec).",
                    "format": "int64",
                    "type": "integer"
                },
                "frequencyDeviation": {
                    "description": "Frequency deviation.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "gwFineTimestampType": {
            "default": "NONE",
            "description": " - NONE: No fine-timestamp available.\n - ENCRYPTED: Encrypted fine-timestamp.\n - PLAIN: Plain fine-timestamp.",
            "enum": [
                "NONE",
                "ENCRYPTED",
                "PLAIN"
            ],
            "type": "string"
        },
        "gwGPSEpochTimingInfo": {
            "properties": {
                "timeSinceGPSEpoch": {
                    "description": "Duration since GPS Epoch.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "gwImmediatelyTimingInfo": {
            "type": "object"
        },
        "gwLRFHSSModulationInfo": {
            "properties": {
                "codeRate": {
                    "description": "Code-rate.",
                    "type": "string"
                },
                "gridSteps": {
                    "description": "Hopping grid number of steps.",
                    "format": "int64",
                    "type": "integer"
                },
                "operatingChannelWidth": {
                    "description": "Operating channel width (OCW) in Hz.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "gwLoRaModulationInfo": {
            "properties": {
                "bandwidth": {
                    "description": "Bandwidth.",
                    "format": "int64",
                    "type": "integer"
                },
                "codeRate": {
                    "description": "Code-rate.",
                    "type": "string"
                },
                "polarizationInversion": {
                    "description": "Polarization inversion.",
                    "type": "boolean"
                },
                "spreadingFactor": {
                    "description": "Speading-factor.",
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "gwPlainFineTimestamp": {
            "properties": {
                "time": {
                    "description": "Full timestamp.",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "gwUplinkRXInfo": {
            "properties": {
                "antenna": {
                    "description": "Antenna.",
                    "format": "int64",
                    "type": "integer"
                },
                "board": {
                    "description": "Board.",
                    "format": "int64",
                    "type": "integer"
                },
                "channel": {
                    "description": "Channel.",
                    "format": "int64",
                    "type": "integer"
                },
                "context": {
                    "description": "Gateway specific context.",
                    "format": "byte",
                    "type": "string"
                },
                "crcStatus": {
                    "$ref": "#/definitions/gwCRCStatus",
                    "description": "CRC status."
                },
                "encryptedFineTimestamp": {
                    "$ref": "#/definitions/gwEncryptedFineTimestamp",
                    "description": "Encrypted fine-timestamp data."
                },
                "fineTimestampType": {
                    "$ref": "#/definitions/gwFineTimestampType",
                    "description": "Fine-timestamp type."
                },
                "gatewayID": {
                    "description": "Gateway ID.",
                    "format": "byte",
                    "type": "string"
                },
                "loRaSNR": {
                    "description": "LoRa SNR.",
                    "format": "double",
                    "type": "number"
                },
                "location": {
                    "$ref": "#/definitions/commonLocation",
                    "description": "Location."
                },
                "plainFineTimestamp": {
                    "$ref": "#/definitions/gwPlainFineTimestamp",
                    "description": "Plain fine-timestamp data."
                },
                "rfChain": {
                    "description": "RF Chain.",
                    "format": "int64",
                    "type": "integer"
                },
                "rssi": {
                    "description": "RSSI.",
                    "format": "int32",
                    "type": "integer"
                },
                "time": {
                    "description": "RX time (only set when the gateway has a GPS module).",
                    "format": "date-time",
                    "type": "string"
                },
                "timeSinceGPSEpoch": {
                    "description": "RX time since GPS epoch (only set when the gateway has a GPS module).",
                    "type": "string"
                },
                "uplinkID": {
                    "description": "Uplink ID (UUID bytes).\nUnique and random ID which can be used to correlate the uplink across multiple logs.",
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "gwUplinkTXInfo": {
            "properties": {
                "frequency": {
                    "description": "Frequency (Hz).",
                    "format": "int64",
                    "type": "integer"
                },
                "fskModulationInfo": {
                    "$ref": "#/definitions/gwFSKModulationInfo",
                    "description": "FSK modulation information."
                },
                "loRaModulationInfo": {
                    "$ref": "#/definitions/gwLoRaModulationInfo",
                    "description": "LoRa modulation information."
                },
                "lrFHSSModulationInfo": {
                    "$ref": "#/definitions/gwLRFHSSModulationInfo",
                    "description": "LR-FHSS modulation information."
                },
                "modulation": {
                    "$ref": "#/definitions/commonModulation",
                    "description": "Modulation."
                }
            },
            "type": "object"
        },
        "protobufAny": {
            "properties": {
                "typeUrl": {
                    "type": "string"
                },
                "value": {
                    "format": "byte",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "runtimeError": {
            "properties": {
                "code": {
                    "format": "int32",
                    "type": "integer"
                },
                "details": {
                    "items": {
                        "$ref": "#/definitions/protobufAny"
                    },
                    "type": "array"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "runtimeStreamError": {
            "properties": {
                "details": {
                    "items": {
                        "$ref": "#/definitions/protobufAny"
                    },
                    "type": "array"
                },
                "grpcCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "httpCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "httpStatus": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    }
}